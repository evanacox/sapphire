; MATCH-SECTION
;
; fn i64 @main(i32, ptr) {
; entry(i32 %argc, ptr %argv):
;   %0 = iconst i32 42
;   %1 = icmp eq i32 %argc, %0
;   condbr bool %1, a, b
;
; a:
;   %2 = null ptr
;   %3 = iconst i64 0
;   %4 = undef { ptr, i64 }
;   %5 = insert { ptr, i64 } %4, ptr %2, 0
;   %6 = insert { ptr, i64 } %5, i64 %3, 1
;   br merge({ ptr, i64 } %6)
;
; b:
;   %7 = null { ptr, i64 }
;   br merge({ ptr, i64 } %7)
;
; merge({ ptr, i64 } %8):
;   %9 = extract i64, { ptr, i64 } %8, 1
;   ret i64 %9
; }
;;
fn i64 @main(i32, ptr) {
entry(i32 %argc, ptr %argv):
  %0 = alloca { ptr, i64 }
  %1 = iconst i32 42
  %2 = icmp eq i32 %argc, %1
  condbr bool %2, a, b

a:
  %3 = null ptr
  %4 = iconst i64 0
  %5 = undef { ptr, i64 }
  %6 = insert { ptr, i64 } %5, ptr %3, 0
  %7 = insert { ptr, i64 } %6, i64 %4, 1
  store { ptr, i64 } %7, ptr %0
  br merge

b:
  %8 = null { ptr, i64 }
  store { ptr, i64 } %8, ptr %0
  br merge

merge:
  %9 = load { ptr, i64 }, ptr %0
  %10 = extract i64, { ptr, i64 } %9, 1
  ret i64 %10
}
