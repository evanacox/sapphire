window.SIDEBAR_ITEMS = {"struct":[["IntoIter","Implements IntoIter for a [`TinyArray`]."],["PackedOption","Provides an [`Option`]-like type for (valid) keys into `SlotMap`s without paying any extra cost to store the flag. It takes up exactly as much space as the key would on its own, while also storing whether or not the key actually exists."],["Str","A reference to a string inside of a given [`StringPool`]. These are significantly more compact than both [`String`]s and `&str`s, and are thus better for usage inside IR storage where space is precious."],["StringPool","Contains a number of heap-allocated strings, and provides an API to map [`Str`]s to those heap-allocated strings. All strings are automatically de-duplicated internally, so two [`Str`]s from two calls to [`Self::insert`] with the same string value will be equivalent."],["TinyArray","A tiny, specialized container for one purpose: storing immutable arrays into data structures that need to be compact. This is effectively a small-size optimized [`Box<[T]>`]."]],"trait":[["Packable","Helper trait for a type that can be packed into a `PackedOption`."]]};