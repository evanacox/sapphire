var searchIndex = JSON.parse('{\
"filetest":{"doc":"","t":"AAFAAAFADGMLLFLLLFLLLRFFFFFFFRFFFFAAAAAAAAFFFFFFFFOFFFFNRNDDELLLLLLMLLLLLLLMFLMLMLLLLLLLLLENNNDNNNNNNELLLLLLLMLLLLLLLLLLFFFFLLLLLLLLLLLLLFFFFLLLLLLLLLLLMMMM","n":["discovery","display","main","runner","runners","subtest","subtest","testcase","ALL_TEST_CASES","DirectoryContents","__private_field","borrow","borrow_mut","cases_in_subdir","deref","from","into","recursive_build","try_from","try_into","type_id","PAD_TO_START_OF_LINE","prettify_diff","prettify_failure","print_failure","print_subtest_header","print_subtest_result","print_summary","test_results","SUBTESTS","pool_for_jobs","run_all","run_subtest","run_tests","dce","domtree","flowgraph","gvn","mem2reg","optimization_runner","parse","simplifyinst","dce","dce_subtest","domtree_subtest","domtree_test","gvn","gvn_subtest","mem2reg","mem2reg_subtest","runner_for_opt","parse_subtest","parser_output","simplifyinst","simplifyinst_subtest","CompileError","FAILURE","Output","Subtest","TestDetails","TestResult","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","elapsed","from","from","from","into","into","into","new","output","panic_hook","run","runner","subdir","subdir","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Check","CompileError","CompileError","Diff","FileTestCase","IndividualChecks","LackOfCompileError","MatchEntireFile","MatchSection","Missing","Panic","TestFailure","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","check","clone","clone","clone_into","clone_into","eq","eq","eq","equivalent","equivalent","equivalent","find_checks","find_individual_checks","find_match_section","first_line","fmt","fmt","fmt","from","from","from","from_raw","hash","hash","hash","into","into","into","match_checks","match_compile_error","match_entire_file","match_section","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","check","expected","full","got"],"q":[[0,"filetest"],[8,"filetest::discovery"],[21,"filetest::display"],[29,"filetest::runner"],[34,"filetest::runners"],[42,"filetest::runners::dce"],[44,"filetest::runners::domtree"],[46,"filetest::runners::gvn"],[48,"filetest::runners::mem2reg"],[50,"filetest::runners::optimization_runner"],[51,"filetest::runners::parse"],[53,"filetest::runners::simplifyinst"],[55,"filetest::subtest"],[90,"filetest::testcase"],[152,"filetest::testcase::TestFailure"]],"d":["","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,6,6,6,0,6,6,6,0,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,19,0,0,0,19,13,14,19,13,14,13,19,13,14,19,13,14,14,13,0,14,14,14,14,19,13,14,19,13,14,19,13,14,0,23,24,23,0,24,23,24,24,23,23,0,23,24,22,23,24,22,22,22,23,24,23,24,23,24,22,23,24,22,0,0,0,0,23,24,22,23,24,22,22,23,24,22,23,24,22,0,0,0,0,23,24,23,24,22,23,24,22,23,24,22,29,30,29,30],"f":[0,0,[[]],0,0,0,[[],[[3,[[2,[1]]]]]],0,0,0,0,[[]],[[]],[4,5],[6,[[9,[1,7,8]]]],[[]],[[]],[[[9,[1,7,8]],1,10]],[[],11],[[],11],[[],12],0,[[4,4],1],[13,1],[[1,1]],[14],[[14,4,13],2],[[15,15,16]],[13],0,[[[2,[15]]],17],[[[2,[15]]],18],[[4,[2,[15]]],18],[[[5,[14]],17],18],0,0,0,0,0,0,0,0,[[4,4],19],[[],14],[[],14],[[4,4],19],[[4,4],19],[[],14],[[4,4],19],[[],14],0,[[],14],[[4,4],19],[[4,4],19],[[],14],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[4,14],0,[20],[[14,17],21],0,[14,4],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[22,19],[[11,[23]]]],0,[23,23],[24,24],[[]],[[]],[[23,23],25],[[24,24],25],[[22,22],25],[[],25],[[],25],[[],25],[[4,4],24],[4,24],[4,24],[4,2],[[23,26],27],[[24,26],27],[[22,26],27],[[]],[[]],[[]],[[4,4],22],[[23,28]],[[24,28]],[[22,28]],[[]],[[]],[[]],[[19,[5,[4]]],[[11,[23]]]],[[19,4],[[11,[23]]]],[[19,4],[[11,[23]]]],[[19,4],[[11,[23]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,0,0,0],"c":[],"p":[[3,"String"],[4,"Option"],[8,"Parser"],[15,"str"],[15,"slice"],[3,"ALL_TEST_CASES"],[3,"Vec"],[3,"RandomState"],[3,"HashMap"],[3,"PathBuf"],[4,"Result"],[3,"TypeId"],[3,"TestDetails"],[3,"Subtest"],[15,"usize"],[3,"Duration"],[3,"ThreadPool"],[6,"Result"],[4,"TestResult"],[3,"PanicInfo"],[3,"Receiver"],[3,"FileTestCase"],[4,"TestFailure"],[4,"Check"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[13,"Missing"],[13,"Diff"]]},\
"sapphire":{"doc":"Sapphire","t":"AOAOAOAFAAAADDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDQDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNNEENLLLLLLLLLLFFFLLLLLLLFMLLLFFMLLFFLLLLLLLLLFMNNNDNDGDDNNNDNDNIDDDDNNDNNEDDGNDIIESSDDNNNDNDNNDENDNNNNNNNNNNDNEDDDDDDIDINDNNDENDNNNNNDNDDDNIEDIDNNDNDDDDNSSSSNNDNNNNNNNNDNNNDDNDNDDNNNINNNNNDNNDDDNDNDDNDDNINDDNNNNNNNNNNNNNNEINDNDDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLALKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKKKKLLLLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLKKKKKKKKKKKKKKLLLLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLDDIFFFFFFFFLLLLFFFFFFFFFFLLFFFFFFFFFFFFLLFFFFFFKLLKLLFFFFFFFFFLLLLLLFFFFFFFFGDDIDDIDIDIDQQLLLLLLOLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDFLLLLLLLLLLLLLLLLLLALLLLLLLLLFLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLDLLFLFLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIQIDDGGDDDDLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLKLKLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNINNENNNNDNLLLLLLLLKKKLLLLLLK","n":["analysis","analysis_preserved","arena","arena_key","cli","dense_arena_key","ir","parse_sir","pass","transforms","utility","vm","ControlFlowGraph","ControlFlowGraphAnalysis","DominanceFrontier","DominanceFrontierAnalysis","DominatorTree","DominatorTreeAnalysis","ModuleStringifyAnalysis","ModuleWriter","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone_into","compute","compute","compute","compute_postorder","compute_tree_dfs_preorder","dominates","expects_preserved","expects_preserved","expects_preserved","expects_preserved","fmt","from","from","from","from","from","from","from","from","frontier","func","idom","inst","into","into","into","into","into","into","into","into","is_pred_of","is_reachable","is_succ_of","module","nodes","postorder","predecessors","print_module","reverse_postorder","root","root","run","run","run","run","strictly_dominates","stringify_module","successors","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","val","ArenaKey","ArenaMap","IntoIter","Item","Keys","SecondaryMap","UniqueArenaMap","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains","contains","contains","default","default","default","deserialize","deserialize","deserialize","drop","eq","eq","eq","equivalent","equivalent","equivalent","fill","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_iter","get","get","get","get_mut","get_mut","index","index","index","index_mut","index_mut","insert","insert","insert","insert_clone_if","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","is_empty","iter","iter","iter","iter_mut","iter_mut","key_index","key_new","keys","keys","keys","last","last","last_mut","len","len","len","len","map_all_keys","map_some_keys","new","new","new","next","next","next_back","next_back","next_key","next_key","remove","reserve","reserve","reserve","reserve_exact","reserve_exact","serialize","serialize","serialize","shrink_to_fit","shrink_to_fit","shrink_to_fit","size_hint","size_hint","take","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","values","values","values","values_mut","values_mut","with_capacity","with_capacity","with_capacity","with_primary","Asm","BaseOptions","Bitcode","IR","IRFormat","MachineFormat","Obj","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","emit_machine_format","emit_sir","eq","eq","equivalent","equivalent","from","from","from","inputs","inputs","into","into","into","jobs","output","output","to_owned","to_owned","tool","tool_with","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verbose","verbose","AShr","After","Alloca","AllocaInst","And","AppendBuilder","ArithInst","ArithmeticInst","Array","Array","At","BConst","BConstInst","BToI","BasicBlock","Before","BinaryInst","Block","BlockIter","BlockWithParams","Bool","Bool","Br","BrInst","C","Call","CallConv","CallInst","CastInst","CommutativeArithInst","CondBr","CondBrInst","Cursor","CursorMut","CursorPos","DEREFERENCEABLE","DEREFERENCEABLE","DataFlowGraph","DebugInfo","Double","EQ","ElemPtr","ElemPtrInst","Extract","ExtractInst","FAdd","FCmp","FCmpInst","FCmpOp","FConst","FConstInst","FDiv","FExt","FMul","FNeg","FRem","FSub","FToSI","FToUI","FTrunc","Fast","Float","Float","FloatFormat","FloatUnaryInst","Func","FuncBuilder","FuncCursor","FuncView","Function","FunctionCursorVisitor","FunctionDefinition","GenericInstVisitor","GlobalAddr","GlobalAddrInst","IAdd","ICmp","ICmpInst","ICmpOp","IConst","IConstInst","IMul","ISub","IToB","IToP","IndirectCall","IndirectCallInst","Insert","InsertBuilder","InsertInst","Inst","Inst","InstBuilder","InstData","InstIter","Instruction","Int","Int","LShr","Layout","Load","LoadInst","Module","ModuleContext","ModuleIdentity","NE","NOALIAS","NOALIAS","NONNULL","NONNULL","Nothing","Null","NullConstInst","OEQ","OGE","OGT","OLE","OLT","ONE","ORD","Offset","OffsetInst","Or","PToI","Param","ParamAttributes","Ptr","Ptr","ReplaceBuilder","Ret","RetAttributes","RetInst","SDiv","SGE","SGT","SIRVisitor","SIToF","SLE","SLT","SRem","Sel","SelInst","Sext","Shl","Sig","SigBuilder","Signature","Single","StackSlot","StackSlot","StackSlotData","StackSlotInst","Store","StoreInst","Struct","Struct","Terminator","Trunc","Type","TypePool","UDiv","UEQ","UGE","UGE","UGT","UGT","UIToF","ULE","ULE","ULT","ULT","UNE","UNO","URem","UType","UnaryInst","Undef","UndefConstInst","Unreachable","UnreachableInst","Value","ValueDef","Xor","Zext","__operands_dfg_mut","__operands_dfg_mut","__operands_dfg_mut","__operands_dfg_mut","abi","aggregate","aggregate","aggregate_ty","all","all","alloc_ty","alloca","alloca","and","and","append","append_block","append_block_param","append_block_param","append_entry_params","append_inst","args","args","args","array","array","as_array","as_bool","as_float","as_int","as_ptr","as_struct","ashr","ashr","base","base","bconst","bconst","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","block","block","block_first_inst","block_last_inst","block_name","block_name","block_name","block_next","block_params","block_params","block_params","block_prev","blocks","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","br","br","branch_info","branch_info","branch_info","btoi","btoi","build","build","build","build","build","build_inst","build_inst","build_result","build_result","call","call","callee","callee","calling_conv","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","col","complement","complement","condbr","condbr","condition","condition","constant_raw","contains","contains","context","create_block","create_block","create_block_after","create_block_before","create_inst","create_stack_slot","create_stack_slot","ctx","ctx","current_block","current_block","current_block_terminator_targets","current_block_terminator_targets","current_func","current_inst","current_inst","current_inst_dbg","current_inst_dbg","current_signature","cursor","data","debug","declare_function","def","def","def","def_mut","def_mut","default","default","default","default","default","define","define_existing_function","define_function","definition","definition_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dfg","dfg","dfg","dfg","dfg","dfg","dfg","dfg","difference","difference","dispatch_blocks","dispatch_blocks","dispatch_blocks","dispatch_blocks","dispatch_funcs","dispatch_funcs","dispatch_inst","dispatch_inst","dispatch_inst","dispatch_inst","dispatch_insts","dispatch_insts","dispatch_insts","dispatch_insts","element","elemptr","elemptr","empty","empty","entry_block","entry_block","entry_block","entry_block","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extract","extract","f32","f64","fadd","fadd","fake","false_branch","fcmp","fcmp","fconst","fconst","fconst_raw","fconst_raw","fdiv","fdiv","fext","fext","file","find_block","find_block","find_function_by_name","find_function_by_name","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmul","fmul","fneg","fneg","format","frem","frem","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_vec","fsub","fsub","ftosi","ftosi","ftoui","ftoui","ftrunc","ftrunc","func","func","function","function","function_mut","function_mut","functions","globaladdr","globaladdr","goto_after","goto_after","goto_before","goto_before","goto_first_inst","goto_first_inst","goto_function_begin","goto_function_begin","goto_inst","goto_inst","goto_last_inst","goto_last_inst","has_result","has_result","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","i16","i32","i64","i8","iadd","iadd","icmp","icmp","icmp_eq","icmp_eq","icmp_ne","icmp_ne","iconst","iconst","identity","if_false","if_true","import_signature","imul","imul","index","index","index","indirectcall","indirectcall","insert","insert","insert","insert","insert","insert","insert_block_after","insert_block_before","insert_inst_after","insert_inst_before","insert_sig","insert_string","inst_block","inst_block","inst_block","inst_data","inst_data","inst_debug","inst_debug","inst_debug","inst_next","inst_prev","inst_to_result","inst_to_result","inst_to_result","inst_to_result","insts_in_block","int","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_array","is_block_inserted","is_block_inserted","is_block_param","is_bool","is_bool_or_int","is_commutative","is_commutative","is_commutative","is_commutative","is_constant","is_decl","is_empty","is_empty","is_empty","is_entry_block","is_entry_block","is_entry_block","is_f32","is_f64","is_float","is_float_of_format","is_i16","is_i16","is_i32","is_i32","is_i64","is_i64","is_i8","is_i8","is_inst_inserted","is_inst_inserted","is_int","is_int_of_width","is_ptr","is_reserved","is_reserved","is_reserved","is_reserved","is_reserved","is_reserved","is_reserved","is_stack_slot_inserted","is_struct","is_val_inserted","is_void","isub","isub","itob","itob","itop","itop","key_index","key_index","key_index","key_index","key_index","key_index","key_new","key_new","key_new","key_new","key_new","key_new","layout","layout","layout","layout","len","len_blocks","len_insts","lhs","lhs","line","load","load","loc_compare","lshr","lshr","mask","matchers","members","module","name","name","name","name","name","new","new","new","new","new","new","new","new","next","next","next_block","next_block","next_inst","next_inst","next_value","not","not","null","null","offset","offset","offset","offset_ty","op","op","opc","operand","operand","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","operands","or","or","over","over","pack","param","params","params","params","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pointer","pointer","pos","pos","pos","prev_block","prev_block","prev_inst","prev_inst","ptoi","ptoi","ptr","remove","remove","remove_block","remove_block","remove_block","remove_block_param","remove_block_param","remove_block_param","remove_inst","remove_inst","remove_inst","remove_inst_and_move_back","remove_inst_and_move_back","remove_inst_if_exists","remove_stack_slot","remove_stack_slot","remove_stack_slot","replace","replace","replace_branch_arg","replace_branch_arg","replace_branch_arg","replace_inst","replace_uses_with","replace_uses_with","replace_uses_with","reserved","reserved","reserved","reserved","reserved","reserved","reserved","result","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","result_ty","ret","ret","ret","ret_val","ret_val","ret_void","ret_void","return_attributes","return_ty","return_ty","rewrite_branch_args","rewrite_branch_args","rewrite_branch_args","rhs","rhs","sdiv","sdiv","sel","sel","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set_pos","set_pos","set_pos","sext","sext","shl","shl","sig","sig","sign_bit","signature","signature","signature","sitof","sitof","slot","srem","srem","stack_slot","stack_slot","stack_slot","stack_slots","stackslot","stackslot","store","store","stored","strings","strings_mut","strip_name","structure","structure","sub","sub","sub_assign","sub_assign","switch_to","symmetric_difference","symmetric_difference","target","targets","targets","targets","targets","targets","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","true_branch","trunc","trunc","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_pool","type_pool_mut","types","types_mut","udiv","udiv","uitof","uitof","undef","undef","union","union","unpack","unreachable","unreachable","unwrap_array","unwrap_bool","unwrap_float","unwrap_int","unwrap_ptr","unwrap_struct","urem","urem","uses_of","val_debug","val_debug","value","value","value","value","value","value_def","value_def","value_def","value_to_inst","value_to_inst","value_to_inst","vararg","vararg","visit_alloca","visit_alloca","visit_and","visit_and","visit_ashr","visit_ashr","visit_bconst","visit_bconst","visit_block","visit_block","visit_block","visit_block","visit_br","visit_br","visit_btoi","visit_btoi","visit_call","visit_call","visit_condbr","visit_condbr","visit_elemptr","visit_elemptr","visit_extract","visit_extract","visit_fadd","visit_fadd","visit_fcmp","visit_fcmp","visit_fconst","visit_fconst","visit_fdiv","visit_fdiv","visit_fext","visit_fext","visit_fmul","visit_fmul","visit_fneg","visit_fneg","visit_frem","visit_frem","visit_fsub","visit_fsub","visit_ftosi","visit_ftosi","visit_ftoui","visit_ftoui","visit_ftrunc","visit_ftrunc","visit_func","visit_func","visit_globaladdr","visit_globaladdr","visit_iadd","visit_iadd","visit_icmp","visit_icmp","visit_iconst","visit_iconst","visit_imul","visit_imul","visit_indirectcall","visit_indirectcall","visit_insert","visit_insert","visit_inst","visit_inst","visit_inst","visit_inst","visit_isub","visit_isub","visit_itob","visit_itob","visit_itop","visit_itop","visit_load","visit_load","visit_lshr","visit_lshr","visit_null","visit_null","visit_offset","visit_offset","visit_or","visit_or","visit_ptoi","visit_ptoi","visit_ret","visit_ret","visit_sdiv","visit_sdiv","visit_sel","visit_sel","visit_sext","visit_sext","visit_shl","visit_shl","visit_sitof","visit_sitof","visit_srem","visit_srem","visit_stackslot","visit_stackslot","visit_store","visit_store","visit_trunc","visit_trunc","visit_udiv","visit_udiv","visit_uitof","visit_uitof","visit_undef","visit_undef","visit_unreachable","visit_unreachable","visit_urem","visit_urem","visit_xor","visit_xor","visit_zext","visit_zext","walk","walk","walk","walk","width","with_name","xor","xor","zext","zext","BasicInstMatcher","BasicValMatcher","IRMatcher","and","and_with","ashr","ashr_with","binary","binary_with","block_param","block_param_of_ty","borrow","borrow","borrow_mut","borrow_mut","fadd","fadd_with","fcmp","fcmp_with","fdiv","fdiv_with","fmul","fmul_with","frem","frem_with","from","from","fsub","fsub_with","iadd","iadd_with","icmp","icmp_with","iconst","iconst_ty","iconst_ty_val","iconst_val","imul","imul_with","into","into","isub","isub_with","lshr","lshr_with","matches","matches_inst","matches_inst","matches_inst","matches_inst","matches_val","matches_val","matches_val","or","or_with","power_of_two","sdiv","sdiv_with","shl","shl_with","srem","srem_with","try_from","try_from","try_into","try_into","type_id","type_id","udiv","udiv_with","urem","urem_with","val","val_of_ty","xor","xor_with","FAMProxy","FunctionAnalysisManager","FunctionAnalysisManagerModuleProxy","FunctionAnalysisPass","FunctionPassManager","FunctionToModulePassAdapter","FunctionTransformPass","ModuleAnalysisManager","ModuleAnalysisPass","ModulePassManager","ModuleTransformPass","PreservedAnalyses","Result","Result","adapt","add_analysis","add_analysis","add_pass","add_pass","all","analysis_preserved","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","default","expects_preserved","expects_preserved","expects_preserved","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get","initialize_for_ir","initialize_for_ir","intersect","into","into","into","into","into","into","into","invalidate","invalidate","invalidate","invalidate","invalidate","invalidate","invalidate","is_preserved","new","new","new","new","none","preserve","preserves_all","run","run","run","run","run","run","run","run","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wrap","DeadCodeEliminationPass","DominatorTreeWriterPass","GVNPass","Mem2RegPass","ModuleWriterPass","SCCPPass","SimplifyCFGPass","SimplifyInstPass","VerifyModulePass","aggressive_instruction_dce","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","common","from","from","from","from","from","from","from","from","from","gvn","into","into","into","into","into","into","into","into","into","mem2reg","run","run","run","run","run","run","run","stderr","stderr","stdout","stdout","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_module","verify_module_panic","with_writer","with_writer","InPlaceConstantFolder","borrow","borrow_mut","could_cause_pointer_escape","from","has_side_effect","into","pointer_escapees","rewrite_and_remove_block_param","rewrite_pad_branch_argument","try_fold","try_from","try_into","type_id","visit_alloca","visit_and","visit_ashr","visit_bconst","visit_br","visit_btoi","visit_call","visit_condbr","visit_elemptr","visit_extract","visit_fadd","visit_fcmp","visit_fconst","visit_fdiv","visit_fext","visit_fmul","visit_fneg","visit_frem","visit_fsub","visit_ftosi","visit_ftoui","visit_ftrunc","visit_globaladdr","visit_iadd","visit_icmp","visit_iconst","visit_imul","visit_indirectcall","visit_insert","visit_isub","visit_itob","visit_itop","visit_load","visit_lshr","visit_null","visit_offset","visit_or","visit_ptoi","visit_ret","visit_sdiv","visit_sel","visit_sext","visit_shl","visit_sitof","visit_srem","visit_stackslot","visit_store","visit_trunc","visit_udiv","visit_uitof","visit_undef","visit_unreachable","visit_urem","visit_xor","visit_zext","IntoIter","IntoTree","Node","Packable","PackedOption","RawSpinMutex","SaHashMap","SaHashSet","SpinMutex","Str","StringPool","TinyArray","and_then","and_then_packed","as_slice","as_slice_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","expand","expand_ref","expect","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_arr","from_iter","from_slice","from_small_vec","from_vec","get","hash","hash","hash","index","insert","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","is_inline","is_none","is_reserved","is_reserved","is_some","is_spilled","iter","iter_mut","len","len","lock","lock","map","new","new","new","next","next_back","none","partial_cmp","partial_cmp","partial_cmp","replace","reserved","reserved","root","serialize","serialize","serialize","serialize","size_hint","some","stringify_tree","take","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unwrap","values","Array","Bool","Engine","Float32","Float64","GenericForeignValue","Int16","Int32","Int64","Int8","Runtime","Struct","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","register_external_function","run","run_c","try_from","try_from","try_into","try_into","type_id","type_id","with_module"],"q":[[0,"sapphire"],[12,"sapphire::analysis"],[116,"sapphire::arena"],[270,"sapphire::cli"],[320,"sapphire::ir"],[2436,"sapphire::ir::matchers"],[2512,"sapphire::pass"],[2621,"sapphire::transforms"],[2712,"sapphire::transforms::common"],[2781,"sapphire::utility"],[2942,"sapphire::vm"]],"d":["Contains the various analysis passes defined in the …","Allows an analysis to define any other analysis that it …","A simple typed arena module.","Creates a type-safe key for a <code>ArenaMap</code> and associated data …","Contains utility code specifically for the CLI tools …","Creates a type-safe key for a <code>ArenaMap</code> with <code>u32</code> as the …","Provides the interfaces and the types required to properly …","Parses a SIR source file into a module, or returns the …","Defines the pass infrastructure used by the middle-end of …","Defines the “transform” passes in SIR’s …","Provides several utility APIs that are used inside of …","Provides APIs for the execution of SIR.","Models successor/predecessor information about the …","An analysis pass that wraps up a <code>ControlFlowGraph</code> into …","Models the dominance frontier information for a function.","Wrapper analysis that generates a <code>DominanceFrontier</code>.","Models the dominator tree for a given control-flow graph. …","Wrapper analysis that generates a <code>DominatorTree</code>.","This is an analysis that provides a <code>ModuleWriter</code> to any …","A simple SIR -&gt; text pass that takes in an entire module, …","Stringifies a whole block. This includes the block label, …","","","","","","","","","","","","","","","","","","","","Computes dominance information for a function.","Computes the dominance frontier of a given control-flow …","Directly computes flowgraph information for a given …","Directly computes a valid post-ordering of the blocks in …","Walks over the <strong>dominator tree</strong> in DFS preorder. This is only","Checks if <code>possible_dominator</code> dominates <code>block</code>. Both blocks …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the blocks in the dominance frontier of <code>block</code>.","Stringifies a whole function. This includes every block, …","Gets the immediate dominator of <code>block</code>, if one exists. The …","Stringifies an entire instruction. This includes the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if a given block <code>pred</code> is a predecessor of <code>block</code>","Checks if a block is reachable from the entry node","Checks if a given block <code>pred</code> is a successor of <code>block</code>","Returns the entire module as a string.","Returns an iterator over <strong>all</strong> of the nodes in the CFG. This …","Returns the list of reachable blocks in a valid reverse …","Returns an iterator over the predecessors for a given …","Prints an entire module to <code>stdout</code>.","Returns an iterator over the reachable blocks in reverse …","Returns the root (entry) node of the CFG.","","","","","","Checks if <code>possible_dominator</code> strictly <code>block</code>. Both blocks …","Writes an entire module to a <code>String</code>.","Returns an iterator over the successors for a given block.","","","","","","","","","","","","","","","","","","Stringifies a SIR type. Unlike the rest of this module, …","","","","","","","","","Provides the name of a value. This is the <code>%_</code> syntax.","Models a type that can act as a key for the arena map …","This is meant to act as a primary mapping of <code>K -&gt; V</code>, where …","Helper type for <code>.into_iter()</code> for arena map types","The underlying data type of the key.","Provides a way of iterating over all of the keys in a …","Intended to be a dense secondary mapping <code>K -&gt; V</code> for keys …","Contains a table of immutable, unique elements. All …","","","","","","","","","","","Returns how big the map believes that the primary arena is.","Returns the total number of elements that the arena can …","Returns the total number of elements that the arena can …","","","","","","","","","Checks if the map contains a value for a given key.","Checks if the arena contains a given key, i.e. whether a …","Checks if the arena contains a given key, i.e. whether a …","","","","","","","","","","","","","","Fills a <code>SecondaryMap</code> with a given value for every key. <code>upto</code>","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gets a value out of the map if the key has been previously …","Accesses the arena and gets the value associated with a …","Accesses the arena and gets the value associated with a …","Gets a value out of the map if the key has been previously …","Accesses the arena and gets the value associated with a …","","","","","","Inserts a key/value pair into the table, mapping …","Inserts a value that is either unique or a duplicate of …","Adds an item into the arena, and returns a key that can be …","Equivalent to <code>Self::insert</code> but will only make a copy of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Checks if the map has any values in it, i.e. if any …","Checks if the arena has had any elements pushed into it.","Checks if the arena has had any elements pushed into it.","Returns an iterator that iterates over the values in the …","Returns an iterator that iterates over the values in the …","Returns an iterator that iterates over the values in the …","Returns an iterator that iterates over the values in the …","Returns an iterator that iterates over the values in the …","Converts the internal storage type into a <code>usize</code> index.","Creates a new key from a given arena index. This should do …","Returns an iterator that iterates over the (valid) keys of …","Returns an iterator that iterates over the (valid) keys of …","Returns an iterator that iterates over the (valid) keys of …","Returns the last element that was inserted in the map. Note","Returns the last element that was inserted in the map.","Returns the last element that was inserted in the map.","Returns the number of values that have been inserted into …","Gets the number of elements that have been pushed into the …","","Gets the number of elements that have been pushed into the …","Efficiently creates a <code>SecondaryMap</code> by applying a function …","Efficiently creates a <code>SecondaryMap</code> by applying a function …","Creates an empty map with <code>0</code> as the capacity.","Creates a new arena with nothing in it.","Creates a new, empty arena. This creates the underlying <code>Vec</code>…","","","","","Gets the key that <em>will be</em> returned by <code>Self::insert</code> when it…","Gets the key that <em>will be</em> returned by <code>Self::insert</code> when it…","Removes a key from the table if it exists. Returns whether …","Informs the map of how big the primary arena is.","Reserves capacity for at least <code>additional</code> more unique …","Reserves capacity for at least <code>additional</code> more elements to …","Reserves the minimum capacity for exactly <code>additional</code> more …","Reserves the minimum capacity for exactly <code>additional</code> more …","","","","Shrinks the underlying capacity of the arena as much as …","Shrinks the capacity of the arena as much as possible …","Shrinks the capacity of the arena as much as possible …","","","Removes a key from the table and returns the value that …","","","","","","","","","","","","","","","","","","","","Returns an iterator that iterates over the values in the …","Returns an iterator that iterates over the values in the …","Returns an iterator that iterates over the values in the …","Returns an iterator that iterates over the values in the …","Returns an iterator that iterates over the values in the …","Creates an empty map that is pre-allocated for a specific …","Creates the arena with a starting capacity.","Creates an empty arena with an initial capacity. This …","Creates an empty map that is configured for optimal …","Human-readable assembly that can be plugged into a …","Basic options that every CLI tool in the suite takes in.","A dense binary format that can be serialized and …","Human-readable IR in a text file.","The format for a tool emitting SIR to emit in.","The format for a tool emitting native code to emit in.","Raw object code that can be plugged into a linker","","","","","","","","","","","Gets the baseline default options that every tool needs.","An emit argument for tools that emit machine-specific code.","Gets the emit format for a tool that emits SIR","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the input file specified on the CLI.","The list of inputs given to the tool","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Gets the number of concurrent threads to use for a given …","Gets the output file specified on the CLI, if one exists.","The file to output results to","","","Returns a <code>bpaf::OptionParser</code> preconfigured with the …","Returns a <code>bpaf::OptionParser</code> preconfigured with the …","","","","","","","","","","Checks for the presence of <code>-v</code> or <code>--verbose</code>","Whether or not to run the logging in verbose mode.","<code>ashr T %a, %b</code>, performs bitwise arithmetic right-shift","Pointing at the end of a specific block.","<code>alloca T</code>, performs stack allocation","Models an <code>alloca</code> stack allocation","<code>and T %a, %b</code>, performs bitwise AND","Helper type that appends to a function. Implements the …","Models a general arithmetic instruction that isn’t …","Models a general arithmetic instruction","Models an array type in the IR. Internally, contains a …","A <code>[T; N]</code> in the IR.","Pointing at a specific instruction in a given block.","<code>bconst N</code>, materializes a bool constant","Models a <code>bconst</code> instruction.","<code>btoi T, U %b</code>, converts a <code>bool</code> into an integer","Models a single basic block in a function within the IR.","Pointing “before” the first instruction in a given …","Some instructions model binary operations, those …","References a single basic block in the program.","Allows the blocks in a layout to be iterated over in …","Models a branch target, along with any arguments being …","Models a boolean type in the IR.","A <code>bool</code> in the IR.","<code>br block</code>, models an unconditional branch","Models a <code>br</code> instruction","The default C convention for the given target platform.","<code>call T @function(args...)</code>, models a direct call to a known …","Models which calling convention a given function should be …","Models a direct function call to a known function","Models a generalized cast instruction","Models a general arithmetic instruction that is …","<code>condbr bool %cond, if block1, else block2</code>, models a …","Models a conditional branch","Models basic cursor operations that <strong>view</strong> a function. None …","A cursor with additional methods for mutating the IR.","Models the position that the cursor is “pointing at.”","<code>dereferenceable</code>: asserts that dereferencing the pointer …","<code>dereferenceable</code>: asserts that dereferencing the pointer …","Owns all of the instructions, basic blocks, values, and …","Holds the “debug info” for an instruction, i.e. where …","Models <code>f64</code>, an IEEE double-precision float (<code>binary64</code>).","<code>eq</code>, checks if the integers are (bitwise) equivalent","<code>elemptr T, ptr %p, N</code>, gets a pointer into an aggregate","Models getting a pointer to the field of an aggregate","<code>extract T %s, N</code>, extracts a value from an aggregate","Models extracting a field from an aggregate","<code>fadd T %a, %b</code>, performs floating-point addition","<code>fcmp op T %a, %b</code>, models a floating-point comparison","Models an <code>fcmp</code> instruction.","Models the different ways that floating-point values can be","<code>fconst T N</code>, materializes a floating-point constant","Models an <code>fconst</code> instruction.","<code>fadd T %a, %b</code>, performs floating-point division","<code>fext T, U %b</code>, converts a float into a larger float","<code>fadd T %a, %b</code>, performs floating-point multiplication","<code>fneg T %a</code>, performs floating-point negation","<code>fadd T %a, %b</code>, gets the remainder of performing …","<code>fadd T %a, %b</code>, performs floating-point subtraction","<code>ftosi T, U %b</code>, converts a float into a signed integer","<code>ftoui T, U %b</code>, converts a float into an unsigned integer","<code>ftrunc T, U %b</code>, converts a float into a smaller float","Similar to <code>fastcc</code> on LLVM, makes calls fast","Models the <code>fN</code> class of fundamental types.","An <code>fN</code> in the IR.","Maps the hardware representation of the floating-point …","Models any unary floating-point arithmetic instructions …","The reference type for a <code>Function</code>. These can be looked up …","Helper type for building a SIR function.","Similar to <code>FuncBuilder</code> but for in-place modification of …","Effectively a <code>FuncCursor</code> without any of the operations …","Models a single function in the IR.","Trait that allows configurable visiting of a single …","The definition of a function.","A trait for a generic “visit an instruction” type. …","<code>globaladdr @name</code>, materializes a pointer to a global value","Models a <code>globaladdr</code> instruction.","<code>iadd T %a, %b</code>, performs two’s complement addition","<code>icmp op T %a, %b</code>, models an integer comparison","Models a single <code>icmp</code> instruction.","Models the different ways that integers values can be …","<code>iconst T N</code>, materializes an integer constant","Models an <code>iconst</code> instruction.","<code>imul T %a, %b</code>, performs two’s complement multiplication","<code>isub T %a, %b</code>, performs two’s complement subtraction","<code>itob T, U %b</code>, converts an integer into a <code>bool</code>","<code>itop T, U %b</code>, converts an integer into a pointer","<code>call T %var(args...)</code>, models an indirect call through a …","Models an indirect call to a function stored in a pointer.","<code>insert T %s, U %a, N</code>, inserts a value into an aggregate","A builder that inserts an instruction between/before other …","Models setting a field in an aggregate","While <code>Value</code>s refer to a result of some sort, <code>Inst</code>s refer to","The value is the result yielded by an instruction","Helper trait that allows easy creation of instruction …","This holds both the opcode of a given instruction and all …","Allows all of the instructions in a given block to be …","These are the properties that any transform or analysis …","Models the <code>iN</code> class of fundamental types.","An <code>iN</code> in the IR.","<code>lshr T %a, %b</code>, performs bitwise logical right-shift","Models the layout of an entire function and every …","<code>load T, ptr %p</code>, loads from a pointer","Models extracting a field from an aggregate","Contains all the data necessary for a single module of SIR.","Models shared ownership of the state that is shared …","Used to identify different <code>Module</code> instances efficiently.","<code>ne</code>, checks if the integers are (bitwise) not-equal","<code>noalias</code>: Only applicable to pointers. Asserts that a …","<code>noalias</code>: Only applicable to pointers. Asserts that a …","<code>nonnull</code>: simply asserts that the pointer is not <code>null</code>.","<code>nonnull</code>: simply asserts that the pointer is not <code>null</code>.","Pointing at nothing.","<code>null T N</code>, materializes a null value","Models a <code>null</code> instruction.","<code>oeq</code>, “ordered and equal.” Checks if the operands are …","<code>oge</code>, “ordered and greater-than-or-equals.” Checks if …","<code>ogt</code>, “ordered and greater-than.” Checks if both …","<code>ole</code>, “ordered and less-than-or-equals.” Checks if both …","<code>olt</code>, “ordered and less-than.” Checks if both operands …","<code>one</code>, “ordered and not equal.” Checks if the operands …","<code>ord</code>, “ordered.” Checks that both operands are not <code>NaN</code>s.","<code>offset T, ptr %p</code>, performs pointer arithmetic","Models an <code>offset</code> instruction","<code>or T %a, %b</code>, performs bitwise OR","<code>ptoi T, U %b</code>, converts a pointer into an integer","The value is the nth block parameter of a block","Models the different attributes that can be on a given …","Models a pointer type in the IR.","A <code>ptr</code> in the IR.","A builder that replaces an instruction with a new one","<code>ret T %val</code>, returns from the current function","Models the different attributes that can be on a given …","Models a return from a function","<code>sdiv T %a, %b</code>, performs signed division","<code>sge</code>, treats both integers as signed and checks if <code>a &gt;= b</code>","<code>sgt</code>, treats both integers as signed and checks if <code>a &gt; b</code>","Trait that allows configurable and simple SIR visiting.","<code>sitof T, U %b</code>, converts a signed integer into a float","<code>sle</code>, treats both integers as signed and checks if <code>a &lt;= b</code>","<code>slt</code>, treats both integers as signed and checks if <code>a &lt; b</code>","<code>srem T %a, %b</code>, gets the remainder of performing signed …","<code>sel bool %cond, T %a, T %b</code>, models a ternary-like …","Models a <code>sel</code> instruction.","<code>sext T, U %b</code>, performs sign-extension","<code>shl T %a, %b</code>, performs bitwise left-shift","The reference type for <code>Signature</code>s. They are keys into a …","Helper type for building a <code>Signature</code>.","Holds all of the information necessary to call a function.","Models <code>f32</code>, an IEEE single-precision float (<code>binary32</code>).","A reference to a single slot on a function’s …","<code>stackslot $name</code>, materializes a pointer to stack memory","Contains information about a specific stack slot in a …","Models a <code>stackslot</code> instruction.","<code>store T %a, ptr %p</code>, stores a value to a pointer","Models a <code>store</code> instruction","Models a structure type in the IR. Internally, contains a …","A <code>{ T... }</code> in the IR.","Models a terminator, i.e. the only instructions that are …","<code>trunc T, U %b</code>, performs truncation","A reference to a type. Copyable, compact, lightweight, and …","Manages all of the compound types for a given module of IR.","<code>udiv T %a, %b</code>, performs unsigned division","<code>ueq</code>, “unordered and equal.” Checks if the operands are …","<code>uge</code>, treats both integers as unsigned and checks if <code>a &gt;= b</code>","<code>uge</code>, “unordered and greater-than-or-equals.” Checks if …","<code>ugt</code>, treats both integers as unsigned and checks if <code>a &gt; b</code>","<code>ugt</code>, “unordered and greater-than.” Checks if both …","<code>itob T, U %b</code>, converts an unsigned integer into a float","<code>ule</code>, treats both integers as unsigned and checks if <code>a &lt;= b</code>","<code>ule</code>, “unordered and less-than-or-equals.” Checks if …","<code>ult</code>, treats both integers as unsigned and checks if <code>a &lt; b</code>","<code>olt</code>, “unordered and less-than.” Checks if both …","<code>une</code>, “unordered and not equal.” Checks if the operands …","<code>uno</code>, “unordered.” Checks if either operand is a <code>NaN</code>.","<code>urem T %a, %b</code>, gets the remainder of performing unsigned …","An unpacked representation of a <code>Type</code> that takes up twice as","Some instructions model unary operations, those …","<code>undef T N</code>, materializes an uninitialized value","Models an <code>undef</code> instruction.","<code>unreachable</code>, a terminator that can never be executed","Gets an <code>unreachable</code> instruction","A basic reference to some value, either the result of some …","Models where a given value came from.","<code>xor T %a, %b</code>, performs bitwise XOR","<code>zext T, U %b</code>, performs zero-extension","","","","","Marks the function as having a specified ABI.","Gets the value being extracted from","Gets the aggregate being inserted to","Gets the type being pointed to by <code>Self::base</code>","Returns the set containing all flags.","Returns the set containing all flags.","Returns the type being allocated on the stack","Builds an <code>alloca</code> instruction","Builds an <code>alloca</code> instruction","Builds an <code>and</code> instruction","Builds an <code>and</code> instruction","Returns a builder that can be used to append an …","Appends a block to the layout, putting it at the end of …","Adds a single block parameter of <code>ty</code> to <code>block</code> and returns a …","Appends a block parameter to a given block.","Appends all the block parameters necessary for the …","Appends an instruction to the end of the specified block. …","Gets the block arguments being passed, if any","Gets the arguments being passed into the function","Gets the arguments being passed to the call","Creates an array type, and returns a <code>Type</code> that refers to …","Creates an array type on the given context and returns it.","If <code>self</code> models an array type, unwraps the array type and …","If <code>self</code> models a boolean type, unwraps the boolean type …","If <code>self</code> models a float type, unwraps the float type and …","If <code>self</code> models a integer type, unwraps the integer type …","If <code>self</code> models a pointer type, unwraps the pointer type …","If <code>self</code> models a struct type, unwraps the struct type and …","Builds an <code>ashr</code> instruction","Builds an <code>ashr</code> instruction","Gets the base of the new address","Returns the pointer to the aggregate being indexed into","Builds a <code>bconst</code> instruction","Builds a <code>bconst</code> instruction","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Resolves a block into a full <code>BasicBlock</code>.","Gets the block target by itself.","Gets the first instruction in <code>block</code>","Gets the last instruction in <code>block</code>","Gets the name of a block that has been inserted into the …","Gets the name of a block that has been inserted into the …","Gets the name of a block that has been inserted into the …","Gets the block that comes after <code>block</code>","Gets the block parameters of a given block.","Gets the block parameters of a given block.","Gets the block parameters of a given block.","Gets the block that comes before <code>block</code>","Gets an iterator over the blocks of the layout.","Creates a boolean type (the <code>bool</code> type in the IR).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>br</code> instruction","Builds a <code>br</code> instruction","If the instruction given is a branch instruction, returns …","If the instruction given is a branch instruction, returns …","If an instruction is a terminator, returns the list of …","Builds a <code>btoi</code> instruction","Builds a <code>btoi</code> instruction","“Builds” a single instruction and inserts it in …","Builds the signature","","","","Builds an instruction and returns the instruction","Builds an instruction and returns the instruction","Builds an instruction and returns its result.","Builds an instruction and returns its result.","Builds a <code>call</code> instruction to a statically-known function.","Builds a <code>call</code> instruction to a statically-known function.","Gets the function being called","Gets the function pointer being called","Gets the function’s calling conventioneturns the column in the original file that the entity …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Builds a <code>condbr</code> instruction","Builds a <code>condbr</code> instruction","Gets the condition that determines which value is chosen.","Gets the condition being checked in the <code>condbr</code>","Gets the constant value as a u64 that can be manipulated …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Gets the <code>ModuleContext</code> owned by this module. This can be …","Creates a single basic block and returns it. This block is …","Inserts a basic block with a given name into the DFG. It …","Equivalent to <code>Self::create_block</code>, except it inserts the …","Equivalent to <code>Self::create_block</code>, except it inserts the …","Inserts an instruction into the DFG, and returns a …","Creates a single basic block and returns it. This block is …","Creates a new stack slot with a given name and type.","Gets the context associated with a given builder. This is …","Gets the module context associated with the module that …","Gets the current block being viewed by the cursor, if any.","Gets the current block being viewed by the cursor, if any.","Tries to get the possible branch targets for the …","Tries to get the possible branch targets for the …","Gets a <code>Func</code> referring to the function being built.","Gets the current block being viewed by the cursor, if any.","Gets the current block being viewed by the cursor, if any.","Gets the debuginfo associated with the current instruction","Gets the debuginfo associated with the current instruction","Gets the <code>Signature</code> of the function being built.","Gets the module being visited.","Gets a single instruction’s <code>InstData</code>.","Gets a single value’s <code>DebugInfo</code>.","Declares a function without providing it a definition. It …","Returns the definition of the function being viewed","","","Gets a mutable reference to the function’s definition.","","","","","","","Finishes defining the function, and actually generates a …","Returns a <code>FuncBuilder</code> that will create a body for a …","Declares and then defines a new function.","Gets the function definition if it exists.","Gets the function definition if it exists.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the data-flow graph in use for the inserter","","Gets the data-flow graph associated with the function …","Gets the data-flow graph associated with the function …","","","Returns the data-flow graph for the function","The “data-flow graph” (DFG) of the function. This is …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Dispatcher that does the default walking behavior, going …","Dispatcher that does the default walking behavior, going …","Dispatcher that does the default walking behavior, going …","Dispatcher that does the default walking behavior, going …","Dispatcher that does the default walking behavior to every …","Dispatcher that does the default walking behavior to every …","Dispatcher that does the default behavior of calling the …","Dispatcher that does the default behavior of calling the …","Dispatcher that does the default behavior of calling the …","Dispatcher that does the default behavior of calling the …","Dispatcher that does the default behavior of visiting …","Dispatcher that does the default behavior of visiting …","Dispatcher that does the default behavior of iterating …","Dispatcher that does the default behavior of iterating …","Looks into the type context and returns the length of the …","Builds an <code>elemptr</code> instruction","Builds an <code>elemptr</code> instruction","Returns an empty set of flags.","Returns an empty set of flags.","Gets the entry block of the function. Unless no blocks …","Gets the entry block of the function. Unless no blocks …","Gets the entry block of the function. Unless no blocks …","Gets the entry block for the layout, if it exists.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds an <code>extract</code> instruction that extracts a value of a …","Builds an <code>extract</code> instruction that extracts a value of a …","Shorthand for <code>Type::float(FloatFormat::Single)</code>. Exactly …","Shorthand for <code>Type::float(FloatFormat::Double)</code>. Exactly …","Builds an <code>fadd</code> instruction","Builds an <code>fadd</code> instruction","Intentionally creates meaningless debuginfo, this must be …","Gets the branch being jumped to if the condition is <code>false</code>","Builds an <code>fcmp</code> instruction","Builds an <code>fcmp</code> instruction","Builds an <code>fconst</code> instruction","Builds an <code>fconst</code> instruction","Builds an <code>fconst</code> instruction","Builds an <code>fconst</code> instruction","Builds an <code>fdiv</code> instruction","Builds an <code>fdiv</code> instruction","Builds an <code>fext</code> instruction","Builds an <code>fext</code> instruction","A reference to the filename. This can be resolved into a …","Finds a block by its name, returning it if it’s inserted …","Finds a block by name, if it exists.","Finds a <code>Func</code> with a given name. If the function has not …","Finds a <code>Func</code> with a given name. If the function has not …","Creates a float type (the <code>fN</code> types in the IR), with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds an <code>fmul</code> instruction","Builds an <code>fmul</code> instruction","Builds an <code>fneg</code> instruction","Builds an <code>fneg</code> instruction","Gets the underlying IEEE floating-point type from a given …","Builds an <code>frem</code> instruction","Builds an <code>frem</code> instruction","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Same as <code>Self::new</code> but specifically when there’s a …","Builds an <code>fsub</code> instruction","Builds an <code>fsub</code> instruction","Builds an <code>ftosi</code> instruction","Builds an <code>ftosi</code> instruction","Builds an <code>ftoui</code> instruction","Builds an <code>ftoui</code> instruction","Builds an <code>fext</code> instruction","Builds an <code>fext</code> instruction","Gets a <code>Func</code> that refers to <code>self</code>. This can be used when a …","The function being moved over, public so it can be …","Resolves a <code>Func</code> into a real function object.","Resolves a <code>Func</code> into a real function object.","Resolves a <code>Func</code> into a real function object.","Resolves a <code>Func</code> into a real function object.","Returns an iterator over all of the functions in the …","Builds a <code>globaladdr</code> instruction","Builds a <code>globaladdr</code> instruction","Moves the position to <code>After(block)</code>.","Moves the position to <code>After(block)</code>.","Moves the position to <code>Before(block)</code>.","Moves the position to <code>Before(block)</code>.","Moves the position to <code>At(block, first_inst_in_block)</code>.","Moves the position to <code>At(block, first_inst_in_block)</code>.","Moves the position to <code>Nothing</code>.","Moves the position to <code>Nothing</code>.","Moves the position to <code>At(containing, inst)</code>","Moves the position to <code>At(containing, inst)</code>","Moves the position to <code>At(block, last_inst_in_block)</code>.","Moves the position to <code>At(block, last_inst_in_block)</code>.","Checks if the instruction yields any results at all.","Checks if the instruction yields any results at all.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shorthand for creating an integer of width <code>16</code>. Exactly …","Shorthand for creating an integer of width <code>32</code>. Exactly …","Shorthand for creating an integer of width <code>64</code>. Exactly …","Shorthand for creating an integer of width <code>8</code>. Exactly …","Builds an <code>iadd</code> instruction","Builds an <code>iadd</code> instruction","Builds an <code>icmp</code> instruction","Builds an <code>icmp</code> instruction","Builds an <code>icmp eq</code> instruction","Builds an <code>icmp eq</code> instruction","Builds an <code>icmp ne</code> instruction","Builds an <code>icmp ne</code> instruction","Builds an <code>iconst</code> instruction","Builds an <code>iconst</code> instruction","Gets a <code>ModuleIdentity</code> that refers to the object.","Gets the value yielded if <code>Self::condition</code> is <code>false</code>.","Gets the value yielded if <code>Self::condition</code> is <code>true</code>.","Imports a signature into the function and returns a <code>Sig</code> …","Builds an <code>imul</code> instruction","Builds an <code>imul</code> instruction","Gets the index of the field being extracted","Gets the index of the field being inserted to","Gets the index of the field of <code>Self::base</code> the resulting …","Builds an <code>indirectcall</code> instruction to a statically-known …","Builds an <code>indirectcall</code> instruction to a statically-known …","Allows an instruction to be inserted before the current …","Allows an instruction to be inserted before the current …","Builds an <code>insert</code> instruction","Builds an <code>insert</code> instruction","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts a basic block after another basic block.","Inserts a block before another block in the list.","Inserts <code>inst</code> into the same block as <code>after</code>, but directly …","Inserts <code>inst</code> into the same block as <code>before</code>, but directly …","Inserts a function signature into the signature arena (if …","Convenience method for quickly inserting a string into the …","Gets the block that an instruction is defined in","Gets the block that an instruction is defined in","Gets the block that an instruction is in","Gets the data defining a given instruction","Gets the data defining a given instruction","Returns the debug information for a given instruction","Returns the debug information for a given instruction","Gets a single instruction’s <code>DebugInfo</code>.","Gets the instruction that comes after <code>inst</code>","Gets the instruction that comes before <code>inst</code>","Converts an <code>Inst</code> into a <code>Value</code> that refers to the result of …","Converts an <code>Inst</code> into a <code>Value</code> that refers to the result of …","Converts an <code>Inst</code> into a <code>Value</code> that refers to the result of …","Converts an <code>Inst</code> into a <code>Value</code> referring to its result if …","Gets an iterator over every instruction in a given block.","Creates an integer type (the <code>iN</code> types in the IR) with a …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Checks if the type is a <code>Array</code>.","Checks if the DFG contains a given block. If the block was …","Checks if a block is currently inside the layout","Checks if a given value is a block parameter.","Checks if the type is a <code>Bool</code>.","Checks if a type is a <code>bool</code> or an <code>iN</code>.","Checks if the binary instruction follows the commutative …","","","","Checks if <code>self</code> is a constant materialization instruction. …","Checks if the function is a declaration, i.e. whether or …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Looks into the type context and checks if the array length …","Checks if a given block is the entry block to the function","Checks if a given block is the entry block to the function","Checks if a given block is the entry block to the function","Checks if the type is a <code>Float</code> with format …","Checks if the type is a <code>Float</code> with format …","Checks if the type is a <code>Float</code>.","Checks if the type is a <code>Float</code> and has a given format.","Checks if the integer type has a width of 16.","Checks if the type is an <code>Int</code> with a width of 16.","Checks if the integer type has a width of 32.","Checks if the type is an <code>Int</code> with a width of 32.","Checks if the integer type has a width of 64.","Checks if the type is an <code>Int</code> with a width of 64.","Checks if the integer type has a width of 8.","Checks if the type is an <code>Int</code> with a width of 8.","Checks if the DFG contains a given instruction. If it does …","Checks if an instruction is currently inside the layout","Checks if the type is a <code>Int</code>.","Checks if the type is a <code>Int</code> and has a given width.","Checks if the type is a <code>Ptr</code>.","","","","","","","","Checks if a given slot is actually a valid stack slot","Checks if the type is a <code>Struct</code>.","Checks if the DFG contains a given value. If it does not, …","Checks if the signature refers to a <code>void</code> function.","Builds an <code>isub</code> instruction","Builds an <code>isub</code> instruction","Builds an <code>itob</code> instruction","Builds an <code>itob</code> instruction","Builds an <code>itop</code> instruction","Builds an <code>itop</code> instruction","","","","","","","","","","","","","Gets the layout associated with the function being viewed","Gets the layout associated with the function being viewed","Returns the data-flow graph for the function","The layout of a function. This maps all the data in the …","Looks into the type context and returns the length of the …","Returns the number of blocks in the layout","Returns the number of instructions in the layout","Gets the left-hand operand of the instruction. For …","Gets the left-hand operand of the instruction. For …","Returns the line in the original file that the entity came …","Builds a <code>load</code> instruction","Builds a <code>load</code> instruction","Compares two instructions that are from the same block, …","Builds a <code>lshr</code> instruction","Builds a <code>lshr</code> instruction","Returns a mask with every usable bit in the type set. This …","Defines APIs for pattern-matching on SIR.","Looks into the type context and gets the fields of the …","Gets the module being visited.","Gets the name of the block.","Gets the name of the stack slot","A reference to a name in the IR for a value. If this is …","Gets the name of the function without <code>@</code>.","Gets the name of the symbol being referenced","Creates a <code>SigBuilder</code> for the signature <code>void ()</code>","Creates a new data-flow graph for a new function.","Creates a new <code>DebugInfo</code> object that has all the fields …","Creates an empty function with a given name and signature.","Creates a branch target that includes an optional list of …","Creates a new, empty layout that is linked to the given …","Creates a new, empty module with a given name.","Constructs a new, empty <code>TypePool</code>.","","","Moves the cursor to the next block in the function. If the …","Moves the cursor to the next block in the function. If the …","Moves the cursor to the next instruction in the function. …","Moves the cursor to the next instruction in the function. …","Gets one past the highest possible value key. This is an …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Builds a <code>null</code> instruction","Builds a <code>null</code> instruction","Builds an <code>offset</code> instruction","Builds an <code>offset</code> instruction","Gets the offset being applied to <code>Self::base</code>","Gets the type being pointed to by <code>Self::base</code>. This affects …","Gets the comparison that the <code>icmp</code> is performing between …","Gets the comparison the <code>fcmp</code> is performing between the two …","Gets the discriminant of the <code>InstData</code>, this is the “…","Gets the single unary operand of the instruction. For …","Gets the single unary operand of the instruction. For …","Gets any operands that the instruction operates on.","Gets any values that are used as operands for computing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds an <code>or</code> instruction","Builds an <code>or</code> instruction","Creates a <code>FuncView</code> that allows the given function to be …","Creates a <code>FuncCursor</code> that allows the given function to be …","Re-packs a <code>UType</code> into a <code>Type</code>. This is the inverse of …","Appends a parameter to the signature","Appends a list of parameters to the signature","Gets the parameters of the block.","Gets the list of parameters and their associated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the pointer being loaded","Gets the pointer being written to","Gets the current cursor position","","","Moves the cursor to the block before the current one. If …","Moves the cursor to the block before the current one. If …","Moves the cursor to the previous instruction in the …","Moves the cursor to the previous instruction in the …","Builds a <code>ptoi</code> instruction","Builds a <code>ptoi</code> instruction","Creates a pointer type (the <code>ptr</code> type in the IR).","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the current block, and moves to the next one.","Removes the current block, and moves to the next one.","Removes a basic block that already exists.","Removes a block parameter from a given block.","Removes a block parameter from a given block.","Removes a block parameter from a given block without …","Removes the current instruction and leaves the cursor …","Removes the current instruction and leaves the cursor …","Removes an instruction from the layout. It is expected …","Removes the current instruction and leaves the cursor …","Removes the current instruction and leaves the cursor …","In the case that removing an instruction that is possibly …","Removes a single stack slot.","Removes a single stack slot.","Removes a stack slot that already exists.","Returns an instruction builder that replaces the current …","Returns an instruction builder that replaces the current …","Rewrites a branch to <code>target</code> to have <code>new</code> as the <code>index</code>th …","Rewrites a branch to <code>target</code> to have <code>new</code> as the <code>index</code>th …","Replaces a single argument to a branch target on a branch …","Replaces <code>inst</code> with new data and new debuginfo. This makes …","Replaces any uses of <code>original</code> in the function with <code>new</code>.","Replaces any uses of <code>original</code> in the function with <code>new</code>.","Replaces every use of <code>original</code> with <code>new</code>.","","","","","","","","Yields the “result” of the visit, if any exists.","Gets the type of the instruction’s result after it has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Marks the signature as having a given return type.","Builds a <code>ret</code> instruction that possibly returns a value and …","Builds a <code>ret</code> instruction that possibly returns a value and …","Shorthand for <code>Self::ret</code> with a <code>Some</code>.","Shorthand for <code>Self::ret</code> with a <code>Some</code>.","Shorthand for <code>Self::ret</code> with a <code>None</code>.","Shorthand for <code>Self::ret</code> with a <code>None</code>.","Gets the list of attributes on the return value of the …","Gets the return type of the function signature.","Gets the return type of the function. If the function is a …","Rewrites the arguments of a given branch to match <code>new</code>","Rewrites the arguments of a given branch to match <code>new</code>","Rewrites a branch instruction that targets <code>target</code> to have …","Gets the left-hand operand of the instruction. For …","Gets the left-hand operand of the instruction. For …","Builds an <code>sdiv</code> instruction","Builds an <code>sdiv</code> instruction","Builds a <code>sel</code> instruction","Builds a <code>sel</code> instruction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Sets the current cursor position","","","Builds a <code>sext</code> instruction","Builds a <code>sext</code> instruction","Builds a <code>shl</code> instruction","Builds a <code>shl</code> instruction","Gets the function signature","Gets the function signature","Returns a mask with the sign bit (MSB in 2’s complement) …","Resolves a <code>Sig</code> into a real signature. This signature must …","Gets a function’s <code>Signature</code> from a given <code>Sig</code>. Any <code>Sig</code> …","Gets the signature of the function.","Builds a <code>sitof</code> instruction","Builds a <code>sitof</code> instruction","Gets the name of the symbol being referenced","Builds an <code>srem</code> instruction","Builds an <code>srem</code> instruction","Returns the information about a given stack slot","Returns the information about a given stack slot","Gets the information about a particular stack slot","Provides an iterator over every stack slot in the function","Builds a <code>stackslot</code> instruction","Builds a <code>stackslot</code> instruction","Builds a <code>store</code> instruction","Builds a <code>store</code> instruction","Gets the value being stored","Returns a guard that allows the string pool to be read.","Returns a guard that allows the string pool to be written …","Returns a copy of <code>self</code>, but without the same name.","Creates a struct type, and returns a <code>Type</code> that refers to …","Creates a structure type from a given list of fields.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Switches to inserting at a specific block.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Gets the target branch being jumped to","Gets the possible blocks where control could be …","","","","","Shorthand for <code>Self::new(target, &amp;[])</code>. Meant for branching …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Gets the branch being jumped to if the condition is <code>true</code>","Builds a <code>trunc</code> instruction","Builds a <code>trunc</code> instruction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the type of a value that was previously emitted by …","Gets the type of a value that was previously emitted by …","Gets the type of a value that was previously emitted by …","Gets the type that the stack slot is allocating space for","Gets the type of the value that a given <code>Value</code> evaluates to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shorthand for getting the <code>TypePool</code> for a given module.","Shorthand for getting the <code>TypePool</code> for a given module.","Returns a guard that allows the type pool to be read.","Returns a guard that allows the type pool to be written to.","Builds a <code>udiv</code> instruction","Builds a <code>udiv</code> instruction","Builds a <code>uitof</code> instruction","Builds a <code>uitof</code> instruction","Builds an <code>undef</code> instruction","Builds an <code>undef</code> instruction","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Unpacks a <code>Type</code> into an <code>UType</code>. This makes it take up more …","Builds an <code>unreachable</code> instruction","Builds an <code>unreachable</code> instruction","Equivalent to <code>Self::as_array</code>, but panics on failure.","Equivalent to <code>Self::as_bool</code>, but panics on failure.","Equivalent to <code>Self::as_float</code>, but panics on failure.","Equivalent to <code>Self::as_int</code>, but panics on failure.","Equivalent to <code>Self::as_ptr</code>, but panics on failure.","Equivalent to <code>Self::as_struct</code>, but panics on failure.","Builds a <code>urem</code> instruction","Builds a <code>urem</code> instruction","Returns every use in the data-flow graph of a given value.","Returns the debug information for a given instruction","Returns the debug information for a given instruction","Gets the value being returned, if any.","Gets the value being inserted","Gets the actual const value being yielded as an unsigned …","Gets the byte value of the floating-point constant","Gets the actual constant value","Gets the definition of a given value","Gets the definition of a given value","Gets the definition of a given value","Converts a <code>Value</code> into an <code>Inst</code> that yields that value, if …","Converts a <code>Value</code> into an <code>Inst</code> that yields that value, if …","Converts a <code>Value</code> into an <code>Inst</code> if and only if that value …","Marks the signature as having a variable number of …","Checks if the signature is for a vararg (<code>...</code>) function. …","Visits an <code>alloca</code> instruction.","Visits an <code>alloca</code> instruction.","Visits an <code>and</code> instruction.","Visits an <code>and</code> instruction.","Visits an <code>ashr</code> instruction.","Visits an <code>ashr</code> instruction.","Visits a <code>bconst</code> instruction.","Visits a <code>bconst</code> instruction.","Called whenever an individual block is visited.","Called whenever an individual block is visited.","Called whenever an individual block is visited","Called whenever an individual block is visited","Visits a <code>br</code> instruction.","Visits a <code>br</code> instruction.","Visits a <code>btoi</code> instruction.","Visits a <code>btoi</code> instruction.","Visits a <code>call</code> instruction.","Visits a <code>call</code> instruction.","Visits a <code>condbr</code> instruction.","Visits a <code>condbr</code> instruction.","Visits an <code>elemptr</code> instruction.","Visits an <code>elemptr</code> instruction.","Visits an <code>extract</code> instruction.","Visits an <code>extract</code> instruction.","Visits an <code>fadd</code> instruction.","Visits an <code>fadd</code> instruction.","Visits an <code>fcmp</code> instruction.","Visits an <code>fcmp</code> instruction.","Visits an <code>fconst</code> instruction.","Visits an <code>fconst</code> instruction.","Visits an <code>fdiv</code> instruction.","Visits an <code>fdiv</code> instruction.","Visits an <code>fext</code> instruction.","Visits an <code>fext</code> instruction.","Visits an <code>fmul</code> instruction.","Visits an <code>fmul</code> instruction.","Visits an <code>fneg</code> instruction.","Visits an <code>fneg</code> instruction.","Visits an <code>frem</code> instruction.","Visits an <code>frem</code> instruction.","Visits an <code>fsub</code> instruction.","Visits an <code>fsub</code> instruction.","Visits an <code>ftosi</code> instruction.","Visits an <code>ftosi</code> instruction.","Visits an <code>ftoui</code> instruction.","Visits an <code>ftoui</code> instruction.","Visits an <code>ftrunc</code> instruction.","Visits an <code>ftrunc</code> instruction.","Called whenever an individual function is visited.","Called whenever an individual function is visited.","Visits a <code>globaladdr</code> instruction.","Visits a <code>globaladdr</code> instruction.","Visits an <code>iadd</code> instruction.","Visits an <code>iadd</code> instruction.","Visits an <code>icmp</code> instruction.","Visits an <code>icmp</code> instruction.","Visits an <code>iconst</code> instruction.","Visits an <code>iconst</code> instruction.","Visits an <code>imul</code> instruction.","Visits an <code>imul</code> instruction.","Visits an <code>indirectcall</code> instruction.","Visits an <code>indirectcall</code> instruction.","Visits an <code>insert</code> instruction.","Visits an <code>insert</code> instruction.","Called whenever an individual instruction is visited.","Called whenever an individual instruction is visited.","Called whenever an individual instruction is visited.","Called whenever an individual instruction is visited.","Visits an <code>isub</code> instruction.","Visits an <code>isub</code> instruction.","Visits an <code>itob</code> instruction.","Visits an <code>itob</code> instruction.","Visits an <code>itop</code> instruction.","Visits an <code>itop</code> instruction.","Visits a <code>load</code> instruction.","Visits a <code>load</code> instruction.","Visits a <code>lshr</code> instruction.","Visits a <code>lshr</code> instruction.","Visits a <code>null</code> instruction.","Visits a <code>null</code> instruction.","Visits an <code>offset</code> instruction.","Visits an <code>offset</code> instruction.","Visits an <code>or</code> instruction.","Visits an <code>or</code> instruction.","Visits a <code>ptoi</code> instruction.","Visits a <code>ptoi</code> instruction.","Visits a <code>ret</code> instruction.","Visits a <code>ret</code> instruction.","Visits an <code>sdiv</code> instruction.","Visits an <code>sdiv</code> instruction.","Visits a <code>sel</code> instruction.","Visits a <code>sel</code> instruction.","Visits a <code>sext</code> instruction.","Visits a <code>sext</code> instruction.","Visits a <code>shl</code> instruction.","Visits a <code>shl</code> instruction.","Visits a <code>sitof</code> instruction.","Visits a <code>sitof</code> instruction.","Visits a <code>srem</code> instruction.","Visits a <code>srem</code> instruction.","Visits a <code>stackslot</code> instruction.","Visits a <code>stackslot</code> instruction.","Visits a <code>store</code> instruction.","Visits a <code>store</code> instruction.","Visits a <code>trunc</code> instruction.","Visits a <code>trunc</code> instruction.","Visits an <code>udiv</code> instruction.","Visits an <code>udiv</code> instruction.","Visits a <code>uitof</code> instruction.","Visits a <code>uitof</code> instruction.","Visits an <code>undef</code> instruction.","Visits an <code>undef</code> instruction.","Visits an <code>unreachable</code> instruction.","Visits an <code>unreachable</code> instruction.","Visits a <code>urem</code> instruction.","Visits a <code>urem</code> instruction.","Visits an <code>xor</code> instruction.","Visits an <code>xor</code> instruction.","Visits a <code>zext</code> instruction.","Visits a <code>zext</code> instruction.","Walks over the module and calls the expected <code>visit_*</code> …","Walks over the module and calls the expected <code>visit_*</code> …","Walks over the module and calls the expected <code>visit_*</code> …","Walks over the module and calls the expected <code>visit_*</code> …","Gets the width of the integer.","Creates a new <code>DebugInfo</code> object that has all the fields …","Builds an <code>xor</code> instruction","Builds an <code>xor</code> instruction","Builds a <code>zext</code> instruction","Builds a <code>zext</code> instruction","A matcher that wraps up a matcher function.","A matcher that matches on values","A basic matcher for a single value/instruction in the IR.","Allows matching against <code>and</code> instructions.","Allows matching against <code>and</code> instructions and their lhs/rhs.","Allows matching against <code>ashr</code> instructions.","Allows matching against <code>ashr</code> instructions and their …","A matcher that matches any binary instruction.","A matcher that matches a binary instruction.","A matcher that matches any value coming from a φ node.","A matcher that matches any value coming from a φ node …","","","","","Allows matching against <code>fadd</code> instructions.","Allows matching against <code>fadd</code> instructions and their …","Allows matching against <code>fcmp</code> instructions.","Allows matching against <code>fcmp</code> instructions and their …","Allows matching against <code>fdiv</code> instructions.","Allows matching against <code>fdiv</code> instructions and their …","Allows matching against <code>fmul</code> instructions.","Allows matching against <code>fmul</code> instructions and their …","Allows matching against <code>frem</code> instructions.","Allows matching against <code>frem</code> instructions and their …","Returns the argument unchanged.","Returns the argument unchanged.","Allows matching against <code>fsub</code> instructions.","Allows matching against <code>fsub</code> instructions and their …","Allows matching against <code>iadd</code> instructions.","Allows matching against <code>iadd</code> instructions and their …","Allows matching against <code>icmp</code> instructions.","Allows matching against <code>icmp</code> instructions and their …","A matcher that matches on <code>iconst</code> instructions (i.e. …","A matcher that matches on <code>iconst</code> instructions with a …","A matcher that matches on <code>iconst</code> instructions with a …","A matcher that matches on <code>iconst</code> instructions with a …","Allows matching against <code>imul</code> instructions.","Allows matching against <code>imul</code> instructions and their …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Allows matching against <code>isub</code> instructions.","Allows matching against <code>isub</code> instructions and their …","Allows matching against <code>lshr</code> instructions.","Allows matching against <code>lshr</code> instructions and their …","Returns whether or not a value matches the provided matcher","Returns whether or not an instruction matches the provided …","Runs the matcher against a given instruction. Returns …","","","Runs the matcher against a given value. Returns whether or …","","","Allows matching against <code>or</code> instructions.","Allows matching against <code>or</code> instructions and their lhs/rhs.","Matches on an <code>iconst</code> value that is a power of 2","Allows matching against <code>sdiv</code> instructions.","Allows matching against <code>sdiv</code> instructions and their …","Allows matching against <code>shl</code> instructions.","Allows matching against <code>shl</code> instructions and their lhs/rhs.","Allows matching against <code>srem</code> instructions.","Allows matching against <code>srem</code> instructions and their …","","","","","","","Allows matching against <code>udiv</code> instructions.","Allows matching against <code>udiv</code> instructions and their …","Allows matching against <code>urem</code> instructions.","Allows matching against <code>urem</code> instructions and their …","A matcher that matches any value","A matcher that matches any value with a given type","Allows matching against <code>xor</code> instructions.","Allows matching against <code>xor</code> instructions and their lhs/rhs.","Alias for the underlying FAM type.","A lazy analysis manager for a single function in SIR.","Wrapper type that maps the function analysis manager into …","An analysis that runs over an entire function.","Manages running a set of passes over individual functions …","Adapts a function transform pass to a module pass that …","Defines a transformation over a single SIR function.","A lazy analysis manager for a module of SIR.","An analysis pass that runs over an entire module.","Manages running a set of passes over IR.","Models a pass that possibly performs a transformation over …","Models the set of analyses that a given transformation pass","The result type of a given analysis.","The result type of a given analysis.","Adapts a given pass into a <code>FunctionToModulePassAdapter</code> …","Registers a function analysis pass. The pass is not run, …","Registers a module analysis pass. The pass is not run, but …","Adds a transformation pass to the pass manager. This pass…","Adds a transformation pass to the pass manager. This pass…","Returns a <code>PreservedAnalyses</code> that marks every analysis as …","Allows an analysis to define any other analysis that it …","","","","","","","","","","","","","","","","","","","Allows analyses to declare dependence on other analyses.","Allows analyses to declare dependence on other analyses.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Lazily gets the result of an analysis. If the analysis has …","Lazily gets the result of an analysis. If the analysis has …","Initializes the analysis manager for a given bit of IR.","Initializes the analysis manager for a given bit of IR.","Gets the intersection of two sets of preserved analyses, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tells the analysis that it has been invalidated. It also …","Tells the analysis that it has been invalidated. It also …","Tells the analysis that it has been invalidated. It also …","Tells the analysis that it has been invalidated. It also …","","Invalidates a set of analyses for a given function.`","Invalidates a set of analyses for a given module.","Checks if an analysis is preserved. If all are preserved …","Creates a new <code>FunctionAnalysisManager</code>.","Creates a new <code>ModuleAnalysisManager</code>.","Creates a new, empty, module pass manager.","Creates an empty function pass manager.","Returns a <code>PreservedAnalyses</code> that marks every analysis as …","Reports that an analysis is preserved by the current …","Checks if <em>all</em> analyses are preserved by a given …","Performs the analysis and returns a computed result. This …","Performs the analysis and returns a computed result. This …","Performs the transformation over a given SIR module.","Performs the transformation over a given SIR function.","","","","","","","","","","","","","","","","","","","","","","","","","","Wraps the FAM into a module pass.","Aggressive dead code elimination.","Wrapper pass that prints out a textual representation of a …","A simple global value numbering pass.","Promotes stack slots that only have <code>load</code>s and <code>store</code>s as …","This is a pass that writes out a textual representation of …","Performs Sparse Conditional Constant Propagation.","Simplifies a CFG by performing the following …","A “simplify all the instructions” pass. This is the …","Analysis pass that wraps the <code>verify_module</code> function.","Scans over an entire function and removes dead …","","","","","","","","","","","","","","","","","","","Common utilities that are needed between different …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Runs a global value-numbering algorithm over <code>func</code> to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Promotes function-local memory (that doesn’t escape) …","","","","","","","","Shorthand for a writer that prints to <code>std::io::stderr</code>.","Shorthand for a writer that prints to <code>std::io::stderr</code>.","Shorthand for a writer that prints to <code>std::io::stdout</code>.","Shorthand for a writer that prints to <code>std::io::stdout</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies that an entire module is valid SIR.","This is <code>verify_module</code>, except that it writes out any errors","Creates an instance of the pass with a given writer.","Creates an instance of the pass with a given writer.","A generic “fold this instruction if possible” utility. …","","","Checks if a given instruction could possibly cause a …","Returns the argument unchanged.","Checks whether a given instruction possibly has a side …","Calls <code>U::from(self)</code>.","Looks at an instruction and returns any of its pointer …","Removes a parameter from a block and rewrites all branches …","Rewrites a branch target to replace an argument with …","Attempts to perform trivial constant folding on a single …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implements IntoIter for a <code>TinyArray</code>.","Models a type that can be traversed in a tree-like …","The node type of the tree","Helper trait for a type that can be packed into a …","Provides an <code>Option</code>-like type for <code>Packable</code> objects without …","Effectively the same thing as <code>SpinMutex</code>, except it doesn’…","Alias for …","Alias for <code>std::collections::HashSet&lt;V, ahash::RandomState&gt;</code>…","A TTAS (test and test-and-set) spin-lock.","A reference to a string inside of a given <code>StringPool</code>. …","Contains a number of heap-allocated strings, and provides …","A tiny, specialized container for one purpose: storing …","Converts a <code>PackedOption&lt;T&gt;</code> to <code>Option&lt;U&gt;</code> by performing a …","Converts a <code>PackedOption&lt;T&gt;</code> to <code>PackedOption&lt;U&gt;</code> by …","Gets the underlying array as a slice.","Gets the underlying array as a slice.","","","","","","","","","","","","","","","","","Returns the list of children that a given node has","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expand the packed option into a normal <code>Option</code> that can be …","Expand the packed option into a normal <code>Option</code> that can be …","Unwrap a packed <code>Some</code> value or panic.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an inline <code>TinyArray</code> from an array","","Creates a <code>TinyArray</code> by cloning elements from a slice.","Creates a <code>TinyArray&lt;T, N&gt;</code> from a given <code>SmallVec&lt;[T; N]&gt;</code>.","Creates a <code>TinyArray</code> from a given <code>Vec</code>.","Gets the string at a given <code>Str</code> index. If the index somehow …","","","","","Inserts a string into the pool and returns a reference …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks if the array is empty.","Checks if the pool contains any strings.","Checks if <code>self</code> is in the inline state.","Returns <code>true</code> if the packed option is a <code>None</code> value.","Checks if the current object is equivalent to the constant …","","Returns <code>true</code> if the packed option is a <code>Some</code> value.","Checks if <code>self</code> is in the heap-allocated state.","Gets the underlying array as a slice.","Gets the underlying array as a slice.","Returns the length of the array.","Returns the number of unique strings stored inside the …","Locks the mutex, potentially waiting if it’s already …","Locks the mutex, potentially waiting if it’s already …","Maps a <code>PackedOption&lt;T&gt;</code> to <code>Option&lt;U&gt;</code> by applying a function …","Creates a new unlocked <code>SpinMutex</code>.","Creates a new unlocked <code>RawSpinMutex</code>.","Creates an empty string pool that has no valid indices …","","","Creates a <code>None</code> instance of <code>PackedOption</code>.","","","","Replaces the value in the packed option, returning the old …","Gets the reserved value of the type.","","Returns the root tree node","","","","","","Creates a <code>Some</code> instance of <code>PackedOption</code>.","Prints a tree in a consistent format.","Takes the value out of the packed option, leaving a <code>None</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","Unlocks the mutex. This follows the semantics of …","Unlocks the mutex. This follows the semantics of …","Unwrap a packed <code>Some</code> value or panic.","Provides an iterator over all of the strings that are in …","An array of SIR values","A <code>bool</code> value","Abstract interface for an “engine” that can execute …","An <code>f32</code> value","An <code>f64</code> value","Provides a translation layer between the specific values …","An <code>i16</code> value","An <code>i32</code> value","An <code>i64</code> value","An <code>i8</code> value","An implementation of an engine as a SIR interpreter.","A structure of SIR values","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Registers a function with a given name as the definition …","Runs the entry point specified by <code>entry</code>. The value returned","Runs the module as-if it was a C program, and returns the …","","","","","","","Creates an engine instance that will execute <code>module</code>."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,16,13,19,12,20,21,6,8,16,13,19,12,20,21,6,8,6,6,8,13,12,0,8,8,16,19,20,21,6,8,16,13,19,12,20,21,6,13,6,8,6,8,16,13,19,12,20,21,6,12,8,12,6,12,8,12,0,8,8,8,16,19,20,21,8,0,12,6,8,16,13,19,12,20,21,6,8,16,13,19,12,20,21,6,6,8,16,13,19,12,20,21,6,6,0,0,0,34,0,0,0,35,39,47,42,40,35,39,47,42,40,35,39,40,35,39,42,40,35,39,42,40,35,39,40,35,39,40,35,39,40,35,35,39,40,35,39,40,35,35,39,47,42,40,35,39,47,42,40,40,35,39,40,35,40,35,39,40,35,40,35,39,40,39,35,39,47,42,40,35,39,47,42,40,35,39,40,35,39,40,35,40,34,34,35,39,40,39,40,40,35,39,47,40,35,35,35,39,40,47,42,47,42,39,40,35,35,39,40,39,40,35,39,40,35,39,40,47,42,35,35,39,42,40,35,39,47,42,40,35,39,47,42,40,35,39,47,42,40,35,39,40,35,40,35,39,40,35,56,0,57,57,0,0,56,58,56,57,58,56,57,56,57,56,57,0,0,0,56,57,56,57,58,56,57,0,58,58,56,57,0,0,58,56,57,0,0,58,56,57,58,56,57,58,56,57,0,58,91,96,91,0,91,0,0,0,0,126,96,91,0,91,0,96,0,0,0,0,0,126,91,0,63,91,0,0,0,0,91,0,0,0,0,67,68,0,0,125,101,91,0,91,0,91,91,0,0,91,0,91,91,91,91,91,91,91,91,91,63,0,126,0,0,0,0,0,0,0,0,0,0,91,0,91,91,0,0,91,0,91,91,91,91,91,0,91,0,0,0,99,0,0,0,0,0,126,91,0,91,0,0,0,0,101,67,68,67,68,96,91,0,103,103,103,103,103,103,103,91,0,91,91,99,0,0,126,0,91,0,0,91,101,101,0,91,101,101,91,91,0,91,91,0,0,0,125,0,91,0,0,91,0,0,126,0,91,0,0,91,103,101,103,101,103,91,101,103,101,103,103,103,91,0,0,91,0,91,0,0,0,91,91,106,107,108,109,62,64,65,66,67,68,69,173,173,173,173,71,73,71,74,71,73,76,77,78,31,32,32,32,32,32,32,32,173,173,86,66,173,173,67,68,67,68,67,68,67,68,67,68,67,68,67,68,74,76,73,73,174,174,71,73,174,174,71,73,73,32,62,72,93,94,128,129,7,88,71,96,97,33,26,98,99,74,70,67,68,63,95,92,24,100,11,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,90,122,73,123,124,2,31,81,84,83,125,82,80,85,32,126,62,72,93,94,128,129,7,88,71,96,97,33,26,98,99,74,70,67,68,63,95,92,24,100,11,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,90,122,73,123,124,2,31,81,84,83,125,82,80,85,32,126,173,173,174,174,74,173,173,173,62,72,93,94,173,173,173,173,173,173,77,78,92,7,88,96,97,33,26,98,99,74,70,67,68,63,95,92,24,100,11,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,90,122,73,123,124,2,31,81,84,83,125,82,80,85,32,126,7,88,96,97,33,26,98,99,74,70,67,68,63,95,92,24,100,11,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,90,122,73,123,124,2,31,81,84,83,125,82,80,85,32,126,7,88,96,97,33,26,67,68,63,95,92,24,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,123,81,84,83,125,82,80,85,32,126,70,67,68,173,173,105,107,91,67,68,2,71,74,71,71,74,71,74,71,11,174,174,174,174,71,174,174,174,174,71,175,74,74,2,174,128,129,176,129,62,74,100,73,31,71,2,2,11,11,7,88,97,33,26,98,99,74,70,67,68,63,95,92,24,100,11,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,73,123,124,2,31,81,84,83,125,82,80,85,32,126,173,72,174,174,93,94,71,100,67,68,177,177,175,175,177,177,177,177,178,178,177,177,175,175,80,173,173,67,68,174,174,71,73,7,88,96,97,33,26,98,99,70,67,68,63,95,92,24,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,123,81,84,83,125,82,80,85,32,126,7,88,96,97,33,26,98,99,70,67,68,63,95,92,24,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,123,81,84,83,125,82,80,85,32,126,67,68,173,173,32,32,173,173,70,107,173,173,173,173,173,173,173,173,173,173,70,71,74,71,2,32,7,88,71,96,97,33,26,98,99,74,70,67,67,67,67,67,68,68,68,68,68,63,95,92,24,100,11,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,90,122,73,123,124,2,31,81,84,83,125,82,80,85,32,126,173,173,173,173,82,173,173,62,72,93,94,128,129,7,88,71,96,97,33,26,98,99,74,70,67,68,63,95,92,24,100,11,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,90,122,73,123,124,2,31,81,84,83,125,82,80,85,32,32,126,126,67,68,67,68,67,68,67,68,76,173,173,173,173,173,173,173,173,11,129,71,2,71,2,2,173,173,174,174,174,174,174,174,174,174,174,174,174,174,179,179,7,88,96,97,33,26,98,99,70,67,68,63,95,92,24,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,123,81,84,83,125,82,80,85,32,126,32,32,32,32,173,173,173,173,173,173,173,173,173,173,2,105,105,71,173,173,64,65,66,173,173,176,176,173,173,67,68,73,73,73,73,74,2,174,174,73,174,174,174,174,74,73,73,174,174,71,74,73,32,67,68,67,68,62,72,93,94,128,129,7,88,71,96,97,33,26,98,99,74,70,67,68,63,95,92,24,100,11,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,90,122,73,123,124,2,31,81,84,83,125,82,80,85,32,126,90,122,67,68,32,74,73,74,32,32,140,102,104,110,91,11,67,68,80,174,174,71,32,32,32,32,83,32,83,32,83,32,83,32,74,73,32,32,32,7,97,33,26,95,24,32,74,32,74,92,173,173,173,173,173,173,7,97,33,26,95,24,7,97,33,26,95,24,174,174,71,100,80,73,73,140,140,70,173,173,73,173,173,83,0,85,177,88,98,70,11,121,62,74,70,11,76,73,2,31,90,122,174,174,174,174,74,67,68,173,173,173,173,86,86,102,104,91,180,180,179,74,91,102,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,173,173,128,129,126,62,62,88,92,7,88,96,97,33,26,67,68,63,95,92,24,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,123,81,84,83,125,82,80,85,32,126,113,114,174,128,129,174,174,174,174,173,173,32,67,68,176,176,74,176,176,74,176,176,73,176,176,73,176,176,74,176,176,176,176,74,74,176,176,74,7,97,33,26,95,24,32,175,179,91,102,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,62,173,173,173,173,173,173,92,92,11,176,176,74,140,140,173,173,173,173,7,88,97,33,26,98,99,74,70,67,68,63,95,92,24,100,11,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,73,123,124,2,31,81,84,83,125,82,80,85,32,126,67,68,174,128,129,173,173,173,173,77,78,83,71,74,11,173,173,120,173,173,174,174,74,74,173,173,173,173,114,124,124,70,31,32,67,68,67,68,71,67,68,106,181,106,107,108,109,76,7,88,96,97,33,26,98,99,74,70,67,68,63,95,92,24,100,11,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,90,122,73,123,124,2,31,81,84,83,125,82,80,85,32,126,67,68,107,173,173,62,72,93,94,128,129,7,88,71,96,97,33,26,98,99,74,70,67,68,63,95,92,24,100,11,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,90,122,73,123,124,2,31,81,84,83,125,82,80,85,32,126,62,72,93,94,128,129,7,88,71,96,97,33,26,98,99,74,70,67,68,63,95,92,24,100,11,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,90,122,73,123,124,2,31,81,84,83,125,82,80,85,32,126,174,174,71,98,74,62,72,93,94,128,129,7,88,71,96,97,33,26,98,99,74,70,67,68,63,95,92,24,100,11,91,76,101,102,103,104,105,106,107,108,109,110,111,112,77,78,69,113,114,86,64,65,66,115,116,117,118,119,120,121,90,122,73,123,124,2,31,81,84,83,125,82,80,85,32,126,2,2,124,124,173,173,173,173,173,173,67,68,32,173,173,32,32,32,32,32,32,173,173,74,174,174,109,65,115,116,117,174,174,74,174,174,74,62,92,177,178,177,178,177,178,177,178,177,177,175,175,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,177,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,177,175,175,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,177,175,175,83,70,173,173,173,173,0,0,0,0,0,0,0,0,0,0,0,142,143,142,143,0,0,0,0,0,0,0,0,0,0,142,143,0,0,0,0,0,0,0,0,0,0,0,0,142,143,0,0,0,0,0,0,139,142,143,139,142,143,0,0,0,0,0,0,0,0,0,142,143,142,143,142,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,147,146,145,28,29,148,150,151,0,152,145,151,28,29,148,150,152,145,151,28,29,148,150,28,29,148,150,147,146,152,151,28,29,152,145,151,28,29,148,150,28,29,28,29,151,152,145,151,28,29,148,150,147,147,146,146,152,28,29,151,28,29,148,150,151,151,151,147,146,149,144,152,145,148,150,152,145,151,28,29,148,150,152,145,151,28,29,148,150,152,145,151,28,29,148,150,152,0,0,0,0,0,0,0,0,0,0,154,155,156,157,158,182,183,159,160,154,155,156,157,158,182,183,159,160,0,154,155,156,157,158,182,183,159,160,0,154,155,156,157,158,182,183,159,160,0,154,155,156,157,158,159,160,157,158,157,158,154,155,156,157,158,182,183,159,160,154,155,156,157,158,182,183,159,160,154,155,156,157,158,182,183,159,160,0,0,157,158,0,162,162,0,162,0,162,0,0,0,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,0,0,170,0,0,0,0,0,0,0,0,0,164,164,75,75,167,168,75,75,164,89,134,166,167,168,75,75,164,89,134,166,170,75,164,89,134,75,164,89,134,75,164,89,164,134,75,75,75,164,89,134,75,75,164,89,134,75,164,89,164,164,164,75,164,89,134,166,167,168,75,164,164,89,134,166,75,75,75,75,75,134,75,164,89,134,134,167,168,75,164,89,134,166,75,166,75,134,75,164,163,89,164,75,75,75,75,134,167,168,164,167,168,134,166,166,164,75,164,89,164,163,89,170,75,164,89,134,166,164,0,164,75,164,89,134,167,168,75,164,89,134,166,167,168,75,164,89,134,166,167,168,75,164,89,134,166,167,168,164,134,171,171,0,171,171,0,171,171,171,171,0,171,171,184,171,184,171,184,171,184,185,185,185,171,184,171,184,171,184,185],"f":[0,0,0,0,0,0,0,[[1,1],[[5,[2,[4,[3]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[6,7],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[10,[9]]]],[6,6],[[]],[[11,12],8],[[12,8],13],[11,12],[11,[[14,[7]]]],[8,[[14,[7]]]],[[8,7,7],15],[16,[[18,[17]]]],[19,[[18,[17]]]],[20,[[18,[17]]]],[21,[[18,[17]]]],[[6,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[13,7],[[18,[7]]]],[[6,24],1],[[8,7],[[25,[7]]]],[[6,26],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,7,7],15],[[8,7],15],[[12,7,7],15],[6,1],[12,27],[8,[[18,[7]]]],[[12,7],27],[2],[8,27],[8,7],[8],[[16,11,28]],[[19,11,28]],[[20,11,28]],[[21,2,29]],[[8,7,7],15],[2,30],[[12,7],27],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[6,31,32],30],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[6,33],1],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[35,[34]]],36],[[[39,[34,[0,[37,38]]]]],36],[[[40,[34]]],36],[[[35,[34,41]]],[[35,[34,41]]]],[[[39,[34,[0,[37,38,41]]]]],[[39,[34,[0,[37,38,41]]]]]],[[[42,[[0,[41,34]]]]],[[42,[[0,[41,34]]]]]],[[[40,[[0,[41,34]],41]]],[[40,[[0,[41,34]],41]]]],[[]],[[]],[[]],[[]],[[[35,[34]],34],15],[[[39,[34,[0,[37,38]]]],34],15],[[[40,[34]],34],15],[[],[[35,[34]]]],[[],[[39,[34,[0,[37,38]]]]]],[[],[[40,[34]]]],[43,[[5,[[35,[34,44]]]]]],[43,[[5,[[39,[34,[0,[37,38,44]]]]]]]],[43,[[5,[[40,[34,44]]]]]],[[[35,[34]]]],[[[35,[34,45]],[35,[34,45]]],15],[[[39,[34,[0,[37,38]]]],[39,[34,[0,[37,38]]]]],15],[[[40,[34,45]],[40,[34,45]]],15],[[],15],[[],15],[[],15],[[34,41],[[35,[34,41]]]],[[[35,[34,46]],22],23],[[[39,[34,[0,[46,38,37]]]],22],23],[[[47,[[0,[27,46]],[0,[34,46]],46]],22],23],[[[42,[[0,[46,34]]]],22],23],[[[40,[34,46]],22],23],[[]],[[]],[[]],[[]],[[]],[48,[[40,[34]]]],[[[35,[34]],34],25],[[[39,[34,[0,[37,38]]]],34],[[25,[[0,[37,38]]]]]],[[[40,[34]],34],25],[[[35,[34]],34],25],[[[40,[34]],34],25],[[[35,[34]],34]],[[[39,[34,[0,[37,38]]]],34]],[[[40,[34]],34]],[[[35,[34]],34]],[[[40,[34]],34]],[[[35,[34]],34],25],[[[39,[34,[0,[37,38]]]],[0,[37,38]]],34],[[[40,[34]]],34],[[[39,[34,41,[0,[37,38]]]],41,[0,[37,38]]],34],[[]],[[]],[[]],[[]],[[]],[[[35,[34]]]],[[[39,[34,[0,[37,38]]]]]],[[]],[[]],[[[40,[34]]]],[[[35,[34]]],15],[[[39,[34,[0,[37,38]]]]],15],[[[40,[34]]],15],[[[35,[34]]],27],[[[39,[34,[0,[37,38]]]]],27],[[[40,[34]]],[[0,[27,49,50]]]],[[[35,[34]]],27],[[[40,[34]]],[[0,[27,49,50]]]],[[],36],[36],[[[35,[34]]],27],[[[39,[34,[0,[37,38]]]]],27],[[[40,[34]]],[[42,[34]]]],[[[39,[34,[0,[37,38]]]]],25],[[[40,[34]]],25],[[[40,[34]]],25],[[[35,[34]]],36],[[[39,[34,[0,[37,38]]]]],36],[[[47,[[0,[27,50]],34]]],36],[[[40,[34]]],36],[[[40,[34]],51],[[35,[34]]]],[[[40,[34]],51],[[35,[34]]]],[[],[[35,[34]]]],[[],[[39,[34,[0,[37,38]]]]]],[[],[[40,[34]]]],[[[47,[27,34]]],25],[[[42,[34]]],25],[[[47,[[0,[27,49,50]],34]]],25],[[[42,[34]]],25],[[[39,[34,[0,[37,38]]]]],34],[[[40,[34]]],34],[[[35,[34]],34],15],[[[35,[34]],36]],[[[39,[34,[0,[37,38]]]],36]],[[[40,[34]],36]],[[[39,[34,[0,[37,38]]]],36]],[[[40,[34]],36]],[[[35,[34,52]],53],5],[[[39,[34,[0,[37,38,52]]]],53],5],[[[40,[34,52]],53],5],[[[35,[34]]]],[[[39,[34,[0,[37,38]]]]]],[[[40,[34]]]],[[[47,[27,34]]]],[[[42,[34]]]],[[[35,[34]],34],25],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],17],[[],17],[[],17],[[],17],[[],17],[[[35,[34]]],27],[[[39,[34,[0,[37,38]]]]],27],[[[40,[34]]],54],[[[35,[34]]],27],[[[40,[34]]],55],[36,[[35,[34]]]],[36,[[39,[34,[0,[37,38]]]]]],[36,[[40,[34]]]],[[[40,[34]]],[[35,[34]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[56,56],[57,57],[[]],[[]],[[],[[59,[58]]]],[[],[[59,[56]]]],[[],[[59,[57]]]],[[56,56],15],[[57,57],15],[[],15],[[],15],[[]],[[]],[[]],[[],[[59,[[14,[60]]]]]],0,[[]],[[]],[[]],[[],[[59,[[25,[36]]]]]],[[],[[59,[[25,[60]]]]]],0,[[]],[[]],[[1,1],[[61,[58]]]],[[1,1,59],61],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],17],[[],17],[[],17],[[],[[59,[15]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[18,[33]]]],[[],[[18,[33]]]],[[],[[18,[33]]]],[[],[[18,[33]]]],[[62,63],62],[64,33],[65,33],[66,32],[[],67],[[],68],[69,32],[[32,70],33],[[32,70],33],[[33,33,70],33],[[33,33,70],33],[71,72],[[73,7]],[[71,7,32,70],33],[[74,7,32,70],33],[[71,7,70],[[75,[33]]]],[[73,26,7]],[76,[[18,[33]]]],[77,[[18,[33]]]],[78,[[18,[33]]]],[[31,32,79],32],[[31,32,79],32],[32,[[25,[80]]]],[32,[[25,[81]]]],[32,[[25,[82]]]],[32,[[25,[83]]]],[32,[[25,[84]]]],[32,[[25,[85]]]],[[33,33,70],33],[[33,33,70],33],[86,33],[66,33],[[15,70],33],[[15,70],33],[[67,67],67],[[68,68],68],[[67,67]],[[68,68]],[[67,67],67],[[68,68],68],[[67,67]],[[68,68]],[67,87],[68,87],[[67,67],67],[[68,68],68],[[67,67]],[[68,68]],[[74,7],88],[76,7],[[73,7],[[25,[26]]]],[[73,7],[[25,[26]]]],[7,89],[7,89],[[71,7],89],[[73,7],[[25,[7]]]],[7,[[18,[33]]]],[7,[[18,[33]]]],[[71,7],[[18,[33]]]],[[73,7],[[25,[7]]]],[73,90],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[76,70],26],[[76,70],26],[26,[[25,[[18,[76]]]]]],[26,[[25,[[18,[76]]]]]],[[74,26],[[25,[[18,[76]]]]]],[[32,33,70],33],[[32,33,70],33],[[91,70]],[62,92],[[72,91,70]],[[93,91,70]],[[94,91,70]],[[91,70],26],[[91,70],26],[[91,70],33],[[91,70],33],[[24,95,[18,[33]],70],26],[[24,95,[18,[33]],70],26],[77,24],[78,33],[92,63],[7,7],[88,88],[96,96],[97,97],[33,33],[26,26],[98,98],[99,99],[74,74],[70,70],[67,67],[68,68],[63,63],[95,95],[92,92],[24,24],[100,100],[11,11],[91,91],[76,76],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[77,77],[78,78],[69,69],[113,113],[114,114],[86,86],[64,64],[65,65],[66,66],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[90,90],[122,122],[73,73],[123,123],[124,124],[2,2],[31,31],[81,81],[84,84],[83,83],[125,125],[82,82],[80,80],[85,85],[32,32],[126,126],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,7],127],[[88,88],127],[[96,96],127],[[97,97],127],[[33,33],127],[[26,26],127],[[67,67],127],[[68,68],127],[[63,63],127],[[95,95],127],[[92,92],127],[[24,24],127],[[91,91],127],[[76,76],127],[[101,101],127],[[102,102],127],[[103,103],127],[[104,104],127],[[105,105],127],[[106,106],127],[[107,107],127],[[108,108],127],[[109,109],127],[[110,110],127],[[111,111],127],[[112,112],127],[[77,77],127],[[78,78],127],[[69,69],127],[[113,113],127],[[114,114],127],[[86,86],127],[[64,64],127],[[65,65],127],[[66,66],127],[[115,115],127],[[116,116],127],[[117,117],127],[[118,118],127],[[119,119],127],[[120,120],127],[[121,121],127],[[123,123],127],[[81,81],127],[[84,84],127],[[83,83],127],[[125,125],127],[[82,82],127],[[80,80],127],[[85,85],127],[[32,32],127],[[126,126],127],[70,87],[67,67],[68,68],[[33,76,76,70],26],[[33,76,76,70],26],[105,33],[107,33],[91,79],[[67,67],15],[[68,68],15],[2,124],[[71,1],7],[[74,89],7],[[71,1,7],7],[[71,1,7],7],[[74,91,70]],[[71,1,32],97],[[74,89,32],97],[71,124],[11,124],[[],[[25,[7]]]],[[],[[25,[7]]]],[[],[[25,[[18,[76]]]]]],[[],[[25,[[18,[76]]]]]],[71,24],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],[[25,[70]]]],[[],[[25,[70]]]],[71,92],[[]],[[74,26],91],[[74,33],70],[[2,1,92],24],[[],100],[128,100],[129,100],[[],100],[129,100],[[],62],[[],74],[[],100],[[],73],[[],31],[71,24],[[2,24],71],[[2,1,92],71],[11,[[25,[100]]]],[11,[[25,[100]]]],[43,[[5,[7]]]],[43,[[5,[88]]]],[43,[[5,[97]]]],[43,[[5,[33]]]],[43,[[5,[26]]]],[43,[[5,[98]]]],[43,[[5,[99]]]],[43,[[5,[74]]]],[43,[[5,[70]]]],[43,[[5,[67]]]],[43,[[5,[68]]]],[43,[[5,[63]]]],[43,[[5,[95]]]],[43,[[5,[92]]]],[43,[[5,[24]]]],[43,[[5,[100]]]],[43,[[5,[11]]]],[43,[[5,[91]]]],[43,[[5,[76]]]],[43,[[5,[101]]]],[43,[[5,[102]]]],[43,[[5,[103]]]],[43,[[5,[104]]]],[43,[[5,[105]]]],[43,[[5,[106]]]],[43,[[5,[107]]]],[43,[[5,[108]]]],[43,[[5,[109]]]],[43,[[5,[110]]]],[43,[[5,[111]]]],[43,[[5,[112]]]],[43,[[5,[77]]]],[43,[[5,[78]]]],[43,[[5,[69]]]],[43,[[5,[113]]]],[43,[[5,[114]]]],[43,[[5,[86]]]],[43,[[5,[64]]]],[43,[[5,[65]]]],[43,[[5,[66]]]],[43,[[5,[115]]]],[43,[[5,[116]]]],[43,[[5,[117]]]],[43,[[5,[118]]]],[43,[[5,[119]]]],[43,[[5,[120]]]],[43,[[5,[121]]]],[43,[[5,[73]]]],[43,[[5,[123]]]],[43,[[5,[124]]]],[43,[[5,[2]]]],[43,[[5,[31]]]],[43,[[5,[81]]]],[43,[[5,[84]]]],[43,[[5,[83]]]],[43,[[5,[125]]]],[43,[[5,[82]]]],[43,[[5,[80]]]],[43,[[5,[85]]]],[43,[[5,[32]]]],[43,[[5,[126]]]],[[],74],[72,74],[[],74],[[],74],[93,74],[94,74],[71,74],0,[[67,67],67],[[68,68],68],[100],[100],[[]],[[]],[[]],[[]],[[26,91,100]],[[26,91,100]],[91],[91],[[7,100]],[[7,100]],[7],[7],[[80,31],32],[[32,33,79,70],33],[[32,33,79,70],33],[[],67],[[],68],[[],[[25,[7]]]],[[],[[25,[7]]]],[71,[[25,[7]]]],[73,[[25,[7]]]],[[7,7],15],[[88,88],15],[[96,96],15],[[97,97],15],[[33,33],15],[[26,26],15],[[98,98],15],[[99,99],15],[[70,70],15],[[67,67],15],[[68,68],15],[[63,63],15],[[95,95],15],[[92,92],15],[[24,24],15],[[91,91],15],[[76,76],15],[[101,101],15],[[102,102],15],[[103,103],15],[[104,104],15],[[105,105],15],[[106,106],15],[[107,107],15],[[108,108],15],[[109,109],15],[[110,110],15],[[111,111],15],[[112,112],15],[[77,77],15],[[78,78],15],[[69,69],15],[[113,113],15],[[114,114],15],[[86,86],15],[[64,64],15],[[65,65],15],[[66,66],15],[[115,115],15],[[116,116],15],[[117,117],15],[[118,118],15],[[119,119],15],[[120,120],15],[[121,121],15],[[123,123],15],[[81,81],15],[[84,84],15],[[83,83],15],[[125,125],15],[[82,82],15],[[80,80],15],[[85,85],15],[[32,32],15],[[126,126],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[67,48]],[[68,48]],[[32,33,79,70],33],[[32,33,79,70],33],[[],32],[[],32],[[33,33,70],33],[[33,33,70],33],[[],70],[107,76],[[103,33,33,70],33],[[103,33,33,70],33],[[32,130,70],33],[[32,130,70],33],[[32,79,70],33],[[32,79,70],33],[[33,33,70],33],[[33,33,70],33],[[32,33,70],33],[[32,33,70],33],[70,89],[[71,1],[[25,[7]]]],[[74,89],[[25,[7]]]],[[71,1],[[25,[24]]]],[[2,1],[[25,[24]]]],[125,32],[[7,22],[[5,[131]]]],[[88,22],23],[[71,22],23],[[96,22],23],[[97,22],[[5,[131]]]],[[33,22],[[5,[131]]]],[[26,22],[[5,[131]]]],[[98,22],23],[[99,22],23],[[74,22],23],[[70,22],23],[[67,22],23],[[67,22],23],[[67,22],23],[[67,22],23],[[67,22],23],[[68,22],23],[[68,22],23],[[68,22],23],[[68,22],23],[[68,22],23],[[63,22],23],[[95,22],[[5,[131]]]],[[92,22],23],[[24,22],[[5,[131]]]],[[100,22],23],[[11,22],23],[[91,22],23],[[76,22],23],[[101,22],23],[[102,22],23],[[103,22],23],[[104,22],23],[[105,22],23],[[106,22],23],[[107,22],23],[[108,22],23],[[109,22],23],[[110,22],23],[[111,22],23],[[112,22],23],[[77,22],23],[[78,22],23],[[69,22],23],[[113,22],23],[[114,22],23],[[86,22],23],[[64,22],23],[[65,22],23],[[66,22],23],[[115,22],23],[[116,22],23],[[117,22],23],[[118,22],23],[[119,22],23],[[120,22],23],[[121,22],23],[[90,22],23],[[122,22],23],[[73,22],23],[[123,22],23],[[124,22],23],[[2,22],23],[[31,22],23],[[81,22],23],[[84,22],23],[[83,22],23],[[125,22],23],[[82,22],23],[[80,22],23],[[85,22],23],[[32,22],23],[[126,22],23],[[33,33,70],33],[[33,33,70],33],[[33,70],33],[[33,70],33],[82,125],[[33,33,70],33],[[33,33,70],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[126,32],[[]],[[]],[32,126],[87,[[25,[67]]]],[87,[[25,[68]]]],[87,67],[87,68],[87,67],[87,68],[48,67],[48,68],[[7,[14,[33]]],76],[[33,33,70],33],[[33,33,70],33],[[32,33,70],33],[[32,33,70],33],[[32,33,70],33],[[32,33,70],33],[[32,33,70],33],[[32,33,70],33],[11,24],0,[[71,24],11],[[2,24],11],[[71,24],11],[[2,24],11],[2,27],[[30,70],33],[[30,70],33],[7],[7],[7],[7],[7],[7],[[]],[[]],[26],[26],[7],[7],[[],15],[[],15],[[7,132]],[[88,132]],[[96,132]],[[97,132]],[[33,132]],[[26,132]],[[98,132]],[[99,132]],[[70,132]],[[67,132]],[[68,132]],[[63,132]],[[95,132]],[[92,132]],[[24,132]],[[91,132]],[[76,132]],[[101,132]],[[102,132]],[[103,132]],[[104,132]],[[105,132]],[[106,132]],[[107,132]],[[108,132]],[[109,132]],[[110,132]],[[111,132]],[[112,132]],[[77,132]],[[78,132]],[[69,132]],[[113,132]],[[114,132]],[[86,132]],[[64,132]],[[65,132]],[[66,132]],[[115,132]],[[116,132]],[[117,132]],[[118,132]],[[119,132]],[[120,132]],[[121,132]],[[123,132]],[[81,132]],[[84,132]],[[83,132]],[[125,132]],[[82,132]],[[80,132]],[[85,132]],[[32,132]],[[126,132]],[[],32],[[],32],[[],32],[[],32],[[33,33,70],33],[[33,33,70],33],[[101,33,33,70],33],[[101,33,33,70],33],[[33,33,70],33],[[33,33,70],33],[[33,33,70],33],[[33,33,70],33],[[32,79,70],33],[[32,79,70],33],[2,123],[105,33],[105,33],[[71,92],95],[[33,33,70],33],[[33,33,70],33],[64,79],[65,79],[66,79],[[33,95,[18,[33]],70],26],[[33,95,[18,[33]],70],26],[[],94],[[],94],[[33,33,79,70],33],[[33,33,79,70],33],[[67,67]],[[68,68]],[[73,7,7]],[[73,7,7]],[[73,26,26]],[[73,26,26]],[[74,92],95],[[2,1],89],[26,7],[26,7],[[73,26],7],[26,91],[26,91],[26,70],[26,70],[[74,26],70],[[73,26],[[25,[26]]]],[[73,26],[[25,[26]]]],[26,[[25,[33]]]],[26,[[25,[33]]]],[[71,26],[[25,[33]]]],[[74,26],[[25,[33]]]],[[73,7],122],[87,32],[[67,67],67],[[68,68],68],[[67,67],15],[[68,68],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,15],[68,15],[32,15],[[74,7],15],[[73,7],15],[[74,33],15],[32,15],[32,15],[[],15],[102,15],[104,15],[110,15],[91,15],[11,15],[67,15],[68,15],[[80,31],15],[7,15],[7,15],[[71,7],15],[32,15],[32,15],[32,15],[[32,125],15],[83,15],[32,15],[83,15],[32,15],[83,15],[32,15],[83,15],[32,15],[[74,26],15],[[73,26],15],[32,15],[[32,87],15],[32,15],[7,15],[97,15],[33,15],[26,15],[95,15],[24,15],[32,15],[[74,97],15],[32,15],[[74,33],15],[92,15],[[33,33,70],33],[[33,33,70],33],[[33,70],33],[[33,70],33],[[33,70],33],[[33,70],33],[7,36],[97,36],[33,36],[26,36],[95,36],[24,36],[36,7],[36,97],[36,33],[36,26],[36,95],[36,24],[[],73],[[],73],[71,73],0,[[80,31],79],[73,36],[73,36],[[],33],[[],33],[70,87],[[32,33,70],33],[[32,33,70],33],[[73,26,26],127],[[33,33,70],33],[[33,33,70],33],[83,79],0,[[85,31],[[18,[32]]]],[[],2],[88,89],[98,89],[70,[[25,[89]]]],[11,1],[121,1],[[],62],[[],74],[[87,87,89],70],[[30,92,24,124],11],[[7,[18,[33]]],76],[[],73],[1,2],[[],31],[90,25],[122,25],[[],[[25,[7]]]],[[],[[25,[7]]]],[[],[[25,[26]]]],[[],[[25,[26]]]],[74,33],[67,67],[68,68],[[32,70],33],[[32,70],33],[[32,33,33,70],33],[[32,33,33,70],33],[86,33],[86,32],[102,101],[104,103],[91,[[133,[91]]]],[[],33],[[],33],[[],[[18,[33]]]],[[74,33],[[18,[33]]]],[91,[[18,[33]]]],[102,[[18,[33]]]],[104,[[18,[33]]]],[105,[[18,[33]]]],[[],[[18,[33]]]],[[],[[18,[33]]]],[[],[[18,[33]]]],[[],[[18,[33]]]],[110,[[18,[33]]]],[111,[[18,[33]]]],[112,[[18,[33]]]],[77,[[18,[33]]]],[78,[[18,[33]]]],[69,[[18,[33]]]],[113,[[18,[33]]]],[114,[[18,[33]]]],[86,[[18,[33]]]],[64,[[18,[33]]]],[65,[[18,[33]]]],[66,[[18,[33]]]],[115,[[18,[33]]]],[116,[[18,[33]]]],[117,[[18,[33]]]],[118,[[18,[33]]]],[119,[[18,[33]]]],[120,[[18,[33]]]],[121,[[18,[33]]]],[[33,33,70],33],[[33,33,70],33],[11,128],[11,129],[126,32],[[62,32],62],[[62,[18,[32]]],62],[88,[[18,[33]]]],[92,18],[[7,7],[[25,[127]]]],[[88,88],[[25,[127]]]],[[96,96],[[25,[127]]]],[[97,97],[[25,[127]]]],[[33,33],[[25,[127]]]],[[26,26],[[25,[127]]]],[[67,67],[[25,[127]]]],[[68,68],[[25,[127]]]],[[63,63],[[25,[127]]]],[[95,95],[[25,[127]]]],[[92,92],[[25,[127]]]],[[24,24],[[25,[127]]]],[[91,91],[[25,[127]]]],[[76,76],[[25,[127]]]],[[101,101],[[25,[127]]]],[[102,102],[[25,[127]]]],[[103,103],[[25,[127]]]],[[104,104],[[25,[127]]]],[[105,105],[[25,[127]]]],[[106,106],[[25,[127]]]],[[107,107],[[25,[127]]]],[[108,108],[[25,[127]]]],[[109,109],[[25,[127]]]],[[110,110],[[25,[127]]]],[[111,111],[[25,[127]]]],[[112,112],[[25,[127]]]],[[77,77],[[25,[127]]]],[[78,78],[[25,[127]]]],[[69,69],[[25,[127]]]],[[113,113],[[25,[127]]]],[[114,114],[[25,[127]]]],[[86,86],[[25,[127]]]],[[64,64],[[25,[127]]]],[[65,65],[[25,[127]]]],[[66,66],[[25,[127]]]],[[115,115],[[25,[127]]]],[[116,116],[[25,[127]]]],[[117,117],[[25,[127]]]],[[118,118],[[25,[127]]]],[[119,119],[[25,[127]]]],[[120,120],[[25,[127]]]],[[121,121],[[25,[127]]]],[[123,123],[[25,[127]]]],[[81,81],[[25,[127]]]],[[84,84],[[25,[127]]]],[[83,83],[[25,[127]]]],[[125,125],[[25,[127]]]],[[82,82],[[25,[127]]]],[[80,80],[[25,[127]]]],[[85,85],[[25,[127]]]],[[32,32],[[25,[127]]]],[[126,126],[[25,[127]]]],[113,33],[114,33],[[],96],[128,96],[129,96],[[],[[25,[7]]]],[[],[[25,[7]]]],[[],[[25,[26]]]],[[],[[25,[26]]]],[[32,33,70],33],[[32,33,70],33],[[],32],[[67,67]],[[68,68]],[[]],[[]],[[74,7]],[[7,33]],[[7,33]],[[74,7,33]],[[],26],[[],26],[[73,26]],[[],26],[[],26],[[73,26],15],[97],[97],[[74,97]],[[],93],[[],93],[[26,7,36,33]],[[26,7,36,33]],[[74,26,7,36,33]],[[74,26,91,70]],[[33,33]],[[33,33]],[[74,33,33]],[[],7],[[],97],[[],33],[[],26],[[],95],[[],24],[[],32],[[]],[[],[[25,[32]]]],[91,[[25,[32]]]],[102,[[25,[32]]]],[104,[[25,[32]]]],[105,[[25,[32]]]],[[],[[25,[32]]]],[[],[[25,[32]]]],[[],[[25,[32]]]],[[],[[25,[32]]]],[110,[[25,[32]]]],[111,[[25,[32]]]],[112,[[25,[32]]]],[77,[[25,[32]]]],[78,[[25,[32]]]],[69,[[25,[32]]]],[113,[[25,[32]]]],[114,[[25,[32]]]],[86,[[25,[32]]]],[64,[[25,[32]]]],[65,[[25,[32]]]],[66,[[25,[32]]]],[115,[[25,[32]]]],[116,[[25,[32]]]],[117,[[25,[32]]]],[118,[[25,[32]]]],[119,[[25,[32]]]],[120,[[25,[32]]]],[121,[[25,[32]]]],[[62,[25,[32]]],62],[[[25,[33]],70],26],[[[25,[33]],70],26],[[33,70],26],[[33,70],26],[70,26],[70,26],[92,68],[92,[[25,[32]]]],[11,[[25,[32]]]],[[26,7,[18,[33]]]],[[26,7,[18,[33]]]],[[74,26,7,[18,[33]]]],[[],33],[[],33],[[33,33,70],33],[[33,33,70],33],[[33,33,33,70],33],[[33,33,33,70],33],[[7,53],5],[[88,53],5],[[97,53],5],[[33,53],5],[[26,53],5],[[98,53],5],[[99,53],5],[[74,53],5],[[70,53],5],[[67,53],5],[[68,53],5],[[63,53],5],[[95,53],5],[[92,53],5],[[24,53],5],[[100,53],5],[[11,53],5],[[91,53],5],[[76,53],5],[[101,53],5],[[102,53],5],[[103,53],5],[[104,53],5],[[105,53],5],[[106,53],5],[[107,53],5],[[108,53],5],[[109,53],5],[[110,53],5],[[111,53],5],[[112,53],5],[[77,53],5],[[78,53],5],[[69,53],5],[[113,53],5],[[114,53],5],[[86,53],5],[[64,53],5],[[65,53],5],[[66,53],5],[[115,53],5],[[116,53],5],[[117,53],5],[[118,53],5],[[119,53],5],[[120,53],5],[[121,53],5],[[73,53],5],[[123,53],5],[[124,53],5],[[2,53],5],[[31,53],5],[[81,53],5],[[84,53],5],[[83,53],5],[[125,53],5],[[82,53],5],[[80,53],5],[[85,53],5],[[32,53],5],[[126,53],5],[[67,67,15]],[[68,68,15]],[96],[[128,96]],[[129,96]],[[32,33,70],33],[[32,33,70],33],[[33,33,70],33],[[33,33,70],33],[77,95],[78,95],[83,79],[[71,95],92],[[74,95],92],[11,92],[[32,33,70],33],[[32,33,70],33],[120,97],[[33,33,70],33],[[33,33,70],33],[97,98],[97,98],[[74,97],98],[74,27],[[97,70],33],[[97,70],33],[[33,33,70],26],[[33,33,70],26],[114,33],[124,[[135,[134]]]],[124,[[136,[134]]]],[70,70],[[31,[18,[32]]],32],[[31,[18,[32]]],32],[[67,67],67],[[68,68],68],[[67,67]],[[68,68]],[[71,7]],[[67,67],67],[[68,68],68],[106,76],[[],[[18,[76]]]],[106,[[18,[76]]]],[107,[[18,[76]]]],[108,[[18,[76]]]],[109,[[18,[76]]]],[7,76],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[67,67]],[[68,68]],[107,76],[[32,33,70],33],[[32,33,70],33],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[33,32],[33,32],[[71,33],32],[98,32],[[74,33],32],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[2,[[135,[31]]]],[2,[[136,[31]]]],[124,[[135,[31]]]],[124,[[136,[31]]]],[[33,33,70],33],[[33,33,70],33],[[32,33,70],33],[[32,33,70],33],[[32,70],33],[[32,70],33],[[67,67],67],[[68,68],68],[32,126],[70,26],[70,26],[32,80],[32,81],[32,82],[32,83],[32,84],[32,85],[[33,33,70],33],[[33,33,70],33],[[74,33],[[18,[26]]]],[33,70],[33,70],[109,[[25,[33]]]],[65,33],[115,79],[116,79],[117,15],[33,99],[33,99],[[74,33],99],[33,[[25,[26]]]],[33,[[25,[26]]]],[[74,33],[[25,[26]]]],[[62,15],62],[92,15],[[26,69,100]],[69],[[26,137,100]],[137],[[26,138,100]],[138],[[26,117,100]],[117],[[7,100]],[[7,100]],[7],[7],[[26,106,100]],[106],[[26,111,100]],[111],[[26,77,100]],[77],[[26,107,100]],[107],[[26,66,100]],[66],[[26,64,100]],[64],[[26,137,100]],[137],[[26,104,100]],[104],[[26,116,100]],[116],[[26,138,100]],[138],[[26,111,100]],[111],[[26,137,100]],[137],[[26,112,100]],[112],[[26,138,100]],[138],[[26,138,100]],[138],[[26,111,100]],[111],[[26,111,100]],[111],[[26,111,100]],[111],[24],[24],[[26,121,100]],[121],[[26,137,100]],[137],[[26,102,100]],[102],[[26,115,100]],[115],[[26,137,100]],[137],[[26,78,100]],[78],[[26,65,100]],[65],[[26,100]],[[26,100]],[26],[26],[[26,138,100]],[138],[[26,111,100]],[111],[[26,111,100]],[111],[[26,113,100]],[113],[[26,138,100]],[138],[[26,119,100]],[119],[[26,86,100]],[86],[[26,137,100]],[137],[[26,111,100]],[111],[[26,109,100]],[109],[[26,138,100]],[138],[[26,105,100]],[105],[[26,111,100]],[111],[[26,138,100]],[138],[[26,111,100]],[111],[[26,138,100]],[138],[[26,120,100]],[120],[[26,114,100]],[114],[[26,111,100]],[111],[[26,138,100]],[138],[[26,111,100]],[111],[[26,118,100]],[118],[[26,108,100]],[108],[[26,138,100]],[138],[[26,137,100]],[137],[[26,111,100]],[111],[[]],[[]],[[]],[[]],[83,87],[[89,87,87,89],70],[[33,33,70],33],[[33,33,70],33],[[32,33,70],33],[[32,33,70],33],0,0,0,[[],139],[[139,139],139],[[],139],[[139,139],139],[[[25,[140]]],139],[[[25,[140]],139,139],139],[[],139],[32,139],[[]],[[]],[[]],[[]],[[],139],[[139,139],139],[[],139],[[139,139],139],[[],139],[[139,139],139],[[],139],[[139,139],139],[[],139],[[139,139],139],[[]],[[]],[[],139],[[139,139],139],[[],139],[[139,139],139],[[],139],[[139,139],139],[[],139],[32,139],[[32,79],139],[79,139],[[],139],[[139,139],139],[[]],[[]],[[],139],[[139,139],139],[[],139],[[139,139],139],[[33,139,74],15],[[26,139,74],15],[[26,74],15],[[[142,[141]],26,74],15],[[[143,[141]],26,74],15],[[33,74],15],[[[142,[141]],33,74],15],[[[143,[141]],33,74],15],[[],139],[[139,139],139],[[],139],[[],139],[[139,139],139],[[],139],[[139,139],139],[[],139],[[139,139],139],[[],5],[[],5],[[],5],[[],5],[[],17],[[],17],[[],139],[[139,139],139],[[],139],[[139,139],139],[[],139],[32,139],[[],139],[[139,139],139],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[144,145],[[28,146]],[[29,147]],[[148,149]],[[150,144]],[[],151],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],29],[[],148],[[],150],[[],[[18,[17]]]],[[],[[18,[17]]]],[152,[[18,[17]]]],[[151,22],23],[[28,22],23],[[29,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[28,11],153],[[29,2],153],[[28,11]],[[29,2]],[[151,151],151],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,151]],[[2,151]],[[11,151]],[[11,151]],[[152,2,151]],[[28,11,151]],[[29,2,151]],[[151,17],15],[[],28],[[],29],[[],148],[[],150],[[],151],[151],[151,15],[[2,29]],[[11,28]],[[2,29],151],[[11,28],151],[[152,2,29]],[[145,2,29],151],[[148,2,29],151],[[150,11,28],151],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[28,152],0,0,0,0,0,0,0,0,0,[[11,12,8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,12,8,13]],[[154,11,28],151],[[155,11,28],151],[[156,11,28],151],[[157,11,28],151],[[158,2,29],151],[[159,11,28],151],[[160,2,29],151],[[],157],[[],158],[[],157],[[],158],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[2,[[5,[14]]]],[2],[161,157],[161,158],0,[[]],[[]],[[74,26],15],[[]],[[74,26],15],[[]],[[74,26],[[10,[[9,[33]]]]]],[[129,12,7,33]],[[129,26,7,36,33]],[[26,91,129],15],[[],5],[[],5],[[],17],[[162,69],25],[[162,137],25],[[162,138],25],[[162,117],25],[[162,106],25],[[162,111],25],[[162,77],25],[[162,107],25],[[162,66],25],[[162,64],25],[[162,137],25],[[162,104],25],[[162,116],25],[[162,138],25],[[162,111],25],[[162,137],25],[[162,112],25],[[162,138],25],[[162,138],25],[[162,111],25],[[162,111],25],[[162,111],25],[[162,121],25],[[162,137],25],[[162,102],25],[[162,115],25],[[162,137],25],[[162,78],25],[[162,65],25],[[162,138],25],[[162,111],25],[[162,111],25],[[162,113],25],[[162,138],25],[[162,119],25],[[162,86],25],[[162,137],25],[[162,111],25],[[162,109],25],[[162,138],25],[[162,105],25],[[162,111],25],[[162,138],25],[[162,111],25],[[162,138],25],[[162,120],25],[[162,114],25],[[162,111],25],[[162,138],25],[[162,111],25],[[162,118],25],[[162,108],25],[[162,138],25],[[162,137],25],[[162,111],25],0,0,0,0,0,0,0,0,0,0,0,0,[[[164,[163]],141],25],[[[164,[163]],141],[[164,[163]]]],[75,18],[75,18],[[]],[[]],[[]],[75,18],[[]],[[]],[[]],[[]],[[]],[[]],[75,18],[[]],[[]],[[]],[[]],[[]],[[],[[10,[9]]]],[[[75,[41]]],[[75,[41]]]],[[[164,[[0,[41,163]]]]],[[164,[[0,[41,163]]]]]],[89,89],[134,134],[[]],[[]],[[]],[[]],[[[75,[165]],[75,[165]]],127],[[[164,[[0,[165,163]]]],[164,[[0,[165,163]]]]],127],[[89,89],127],[[],[[164,[163]]]],[[],134],[75],[75],[43,[[5,[[75,[44]]]]]],[43,[[5,[[164,[[0,[44,163]]]]]]]],[43,[[5,[89]]]],[43,[[5,[134]]]],[75],[[[75,[45]],75],15],[[[164,[[0,[45,163]]]],[164,[[0,[45,163]]]]],15],[[89,89],15],[[134,134],15],[[],15],[[],15],[[],15],[[[164,[163]]],[[25,[163]]]],[[[164,[163]]],[[25,[163]]]],[[[164,[163]],1],163],[[[75,[46]],22],23],[[[164,[[0,[163,46]]]],22],23],[[89,22],23],[[134,22],23],[[[166,[46]],22],23],[[]],[[]],[[]],[[]],[[[25,[163]]],[[164,[163]]]],[[]],[[]],[[]],[9,75],[48,75],[[[18,[41]]],[[75,[41]]]],[[[10,[9]]],75],[14,75],[[134,89],[[25,[1]]]],[[[75,[37]],132]],[[[164,[[0,[37,163]]]],132]],[[89,132]],[[134,89]],[[134,1],89],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75],[[]],[75,15],[134,15],[75,15],[[[164,[163]]],15],[[],15],[89,15],[[[164,[163]]],15],[75,15],[75,27],[75,27],[75,36],[134,36],[167],[168],[[[164,[163]],141],25],[[],167],[[],168],[[],134],[166,25],[166,25],[[],[[164,[163]]]],[[[75,[169]],[75,[169]]],[[25,[127]]]],[[[164,[[0,[169,163]]]],[164,[[0,[169,163]]]]],[[25,[127]]]],[[89,89],[[25,[127]]]],[[[164,[163]],163],[[25,[163]]]],[[]],[[],89],[[]],[[[75,[52]],53],5],[[[164,[[0,[52,163]]]],53],5],[[89,53],5],[[134,53],5],[166],[163,[[164,[163]]]],[[170,51],30],[[[164,[163]]],[[25,[163]]]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[167],[168],[[[164,[163]]],163],[134,27],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1,[[25,[171]]]],[[[18,[1]]],172],[[],5],[[],5],[[],5],[[],5],[[],17],[[],17],[2]],"c":[],"p":[[15,"str"],[3,"Module"],[8,"Error"],[3,"Box"],[4,"Result"],[3,"ModuleWriter"],[3,"Block"],[3,"DominatorTree"],[15,"array"],[3,"SmallVec"],[3,"Function"],[3,"ControlFlowGraph"],[3,"DominanceFrontier"],[3,"Vec"],[15,"bool"],[3,"DominatorTreeAnalysis"],[3,"TypeId"],[15,"slice"],[3,"DominanceFrontierAnalysis"],[3,"ControlFlowGraphAnalysis"],[3,"ModuleStringifyAnalysis"],[3,"Formatter"],[6,"Result"],[3,"Func"],[4,"Option"],[3,"Inst"],[8,"Iterator"],[3,"FunctionAnalysisManager"],[3,"ModuleAnalysisManager"],[3,"String"],[3,"TypePool"],[3,"Type"],[3,"Value"],[8,"ArenaKey"],[3,"SecondaryMap"],[15,"usize"],[8,"Hash"],[8,"Eq"],[3,"UniqueArenaMap"],[3,"ArenaMap"],[8,"Clone"],[3,"Keys"],[8,"Deserializer"],[8,"Deserialize"],[8,"PartialEq"],[8,"Debug"],[3,"IntoIter"],[8,"IntoIterator"],[8,"DoubleEndedIterator"],[8,"ExactSizeIterator"],[8,"FnMut"],[8,"Serialize"],[8,"Serializer"],[3,"Iter"],[3,"IterMut"],[4,"MachineFormat"],[4,"IRFormat"],[3,"BaseOptions"],[8,"Parser"],[3,"PathBuf"],[3,"OptionParser"],[3,"SigBuilder"],[4,"CallConv"],[3,"ExtractInst"],[3,"InsertInst"],[3,"ElemPtrInst"],[3,"ParamAttributes"],[3,"RetAttributes"],[3,"AllocaInst"],[3,"DebugInfo"],[3,"FuncBuilder"],[3,"AppendBuilder"],[3,"Layout"],[3,"DataFlowGraph"],[3,"TinyArray"],[3,"BlockWithParams"],[3,"CallInst"],[3,"IndirectCallInst"],[15,"u64"],[3,"Array"],[3,"Bool"],[3,"Float"],[3,"Int"],[3,"Ptr"],[3,"Struct"],[3,"OffsetInst"],[15,"u32"],[3,"BasicBlock"],[3,"Str"],[3,"BlockIter"],[4,"InstData"],[3,"Signature"],[3,"ReplaceBuilder"],[3,"InsertBuilder"],[3,"Sig"],[4,"CursorPos"],[3,"StackSlot"],[3,"StackSlotData"],[4,"ValueDef"],[3,"FunctionDefinition"],[4,"ICmpOp"],[3,"ICmpInst"],[4,"FCmpOp"],[3,"FCmpInst"],[3,"SelInst"],[3,"BrInst"],[3,"CondBrInst"],[3,"UnreachableInst"],[3,"RetInst"],[3,"ArithmeticInst"],[3,"CastInst"],[3,"FloatUnaryInst"],[3,"LoadInst"],[3,"StoreInst"],[3,"IConstInst"],[3,"FConstInst"],[3,"BConstInst"],[3,"UndefConstInst"],[3,"NullConstInst"],[3,"StackSlotInst"],[3,"GlobalAddrInst"],[3,"InstIter"],[3,"ModuleIdentity"],[3,"ModuleContext"],[4,"FloatFormat"],[4,"UType"],[4,"Ordering"],[3,"FuncView"],[3,"FuncCursor"],[15,"f64"],[3,"Error"],[8,"Hasher"],[3,"Discriminant"],[3,"StringPool"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[6,"CommutativeArithInst"],[6,"ArithInst"],[8,"IRMatcher"],[8,"BinaryInst"],[8,"FnOnce"],[3,"BasicInstMatcher"],[3,"BasicValMatcher"],[8,"FunctionTransformPass"],[3,"FunctionToModulePassAdapter"],[8,"FunctionAnalysisPass"],[8,"ModuleAnalysisPass"],[3,"ModulePassManager"],[8,"ModuleTransformPass"],[3,"FunctionPassManager"],[3,"PreservedAnalyses"],[3,"FunctionAnalysisManagerModuleProxy"],[3,"Ref"],[3,"DeadCodeEliminationPass"],[3,"GVNPass"],[3,"Mem2RegPass"],[3,"DominatorTreeWriterPass"],[3,"ModuleWriterPass"],[3,"SimplifyInstPass"],[3,"VerifyModulePass"],[8,"Write"],[3,"InPlaceConstantFolder"],[8,"Packable"],[3,"PackedOption"],[8,"Ord"],[3,"IntoIter"],[3,"SpinMutex"],[3,"RawSpinMutex"],[8,"PartialOrd"],[8,"IntoTree"],[4,"GenericForeignValue"],[15,"i32"],[8,"InstBuilder"],[8,"Cursor"],[8,"FunctionCursorVisitor"],[8,"CursorMut"],[8,"SIRVisitor"],[8,"GenericInstVisitor"],[8,"Instruction"],[8,"UnaryInst"],[8,"Terminator"],[3,"SCCPPass"],[3,"SimplifyCFGPass"],[3,"Runtime"],[8,"Engine"]]},\
"sirc":{"doc":"","t":"FF","n":["main","run_pass"],"q":[[0,"sirc"]],"d":["",""],"i":[0,0],"f":[[[]],[1]],"c":[],"p":[[3,"Module"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
